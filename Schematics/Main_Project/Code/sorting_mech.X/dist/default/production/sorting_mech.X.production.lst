

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 09 13:01:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 23/03/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     _PORTCbits	set	3970
    64   000000                     _PORTBbits	set	3969
    65   000000                     _TRISBbits	set	3987
    66   000000                     _PORTAbits	set	3968
    67   000000                     _PORTDbits	set	3971
    68   000000                     _TRISAbits	set	3986
    69   000000                     _TRISCbits	set	3988
    70   000000                     _TRISEbits	set	3990
    71   000000                     _TRISDbits	set	3989
    72   000000                     _PORTEbits	set	3972
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77   007010                     __pcinit:
    78                           	callstack 0
    79   007010                     start_initialization:
    80                           	callstack 0
    81   007010                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Clear objects allocated to COMRAM (2 bytes)
    85   007010  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
    86   007012  6A49               	clrf	__pbssCOMRAM& (0+255),c
    87   007014                     end_of_initialization:
    88                           	callstack 0
    89   007014                     __end_of__initialization:
    90                           	callstack 0
    91   007014  0100               	movlb	0
    92   007016  EFAC  F038         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95   000049                     __pbssCOMRAM:
    96                           	callstack 0
    97   000049                     _col:
    98                           	callstack 0
    99   000049                     	ds	2
   100                           
   101                           	psect	cstackCOMRAM
   102   000001                     __pcstackCOMRAM:
   103                           	callstack 0
   104   000001                     ??_init:
   105   000001                     ?_measure_color:
   106                           	callstack 0
   107   000001                     ?_get_weight:
   108                           	callstack 0
   109   000001                     ?___xxtofl:
   110                           	callstack 0
   111   000001                     msDelay@t:
   112                           	callstack 0
   113   000001                     toggle_conveyor@in_1:
   114                           	callstack 0
   115   000001                     measure_color@s2_val:
   116                           	callstack 0
   117   000001                     ___xxtofl@val:
   118                           	callstack 0
   119                           
   120                           ; 4 bytes @ 0x0
   121   000001                     	ds	2
   122   000003                     msDelay@j:
   123                           	callstack 0
   124   000003                     toggle_conveyor@in_2:
   125                           	callstack 0
   126   000003                     measure_color@s3_val:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x2
   130   000003                     	ds	2
   131   000005                     ??_measure_color:
   132   000005                     ??___xxtofl:
   133   000005                     msDelay@i:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x4
   137   000005                     	ds	2
   138   000007                     ?_get_color:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x6
   142   000007                     	ds	2
   143   000009                     ??_get_color:
   144   000009                     ___xxtofl@sign:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x8
   148   000009                     	ds	1
   149   00000A                     ___xxtofl@exp:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x9
   153   00000A                     	ds	1
   154   00000B                     get_color@red_val:
   155                           	callstack 0
   156   00000B                     ___xxtofl@arg:
   157                           	callstack 0
   158                           
   159                           ; 4 bytes @ 0xA
   160   00000B                     	ds	2
   161   00000D                     get_color@blue_val:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0xC
   165   00000D                     	ds	2
   166   00000F                     ?___fldiv:
   167                           	callstack 0
   168   00000F                     ___fldiv@b:
   169                           	callstack 0
   170                           
   171                           ; 4 bytes @ 0xE
   172   00000F                     	ds	4
   173   000013                     ___fldiv@a:
   174                           	callstack 0
   175                           
   176                           ; 4 bytes @ 0x12
   177   000013                     	ds	4
   178   000017                     ??___fldiv:
   179                           
   180                           ; 1 bytes @ 0x16
   181   000017                     	ds	4
   182   00001B                     ___fldiv@rem:
   183                           	callstack 0
   184                           
   185                           ; 4 bytes @ 0x1A
   186   00001B                     	ds	4
   187   00001F                     ___fldiv@sign:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x1E
   191   00001F                     	ds	1
   192   000020                     ___fldiv@new_exp:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x1F
   196   000020                     	ds	2
   197   000022                     ___fldiv@grs:
   198                           	callstack 0
   199                           
   200                           ; 4 bytes @ 0x21
   201   000022                     	ds	4
   202   000026                     ___fldiv@bexp:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0x25
   206   000026                     	ds	1
   207   000027                     ___fldiv@aexp:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x26
   211   000027                     	ds	1
   212   000028                     ?___fltol:
   213                           	callstack 0
   214   000028                     ___fltol@f1:
   215                           	callstack 0
   216                           
   217                           ; 4 bytes @ 0x27
   218   000028                     	ds	4
   219   00002C                     ??___fltol:
   220                           
   221                           ; 1 bytes @ 0x2B
   222   00002C                     	ds	4
   223   000030                     ___fltol@sign1:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x2F
   227   000030                     	ds	1
   228   000031                     ___fltol@exp1:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x30
   232   000031                     	ds	1
   233   000032                     adjust_red_flap@degrees:
   234                           	callstack 0
   235   000032                     adjust_blue_flap@degrees:
   236                           	callstack 0
   237   000032                     adjust_jaw@degrees:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x31
   241   000032                     	ds	2
   242   000034                     adjust_red_flap@direction:
   243                           	callstack 0
   244   000034                     adjust_blue_flap@direction:
   245                           	callstack 0
   246   000034                     adjust_jaw@direction:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x33
   250   000034                     	ds	2
   251   000036                     ??_adjust_red_flap:
   252   000036                     ??_adjust_blue_flap:
   253   000036                     ??_adjust_jaw:
   254                           
   255                           ; 1 bytes @ 0x35
   256   000036                     	ds	1
   257   000037                     adjust_red_flap@i:
   258                           	callstack 0
   259   000037                     adjust_blue_flap@i:
   260                           	callstack 0
   261   000037                     adjust_jaw@i:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x36
   265   000037                     	ds	2
   266   000039                     adjust_red_flap@i_560:
   267                           	callstack 0
   268   000039                     adjust_blue_flap@i_574:
   269                           	callstack 0
   270   000039                     adjust_jaw@i_580:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x38
   274   000039                     	ds	2
   275   00003B                     adjust_red_flap@no_of_steps:
   276                           	callstack 0
   277   00003B                     adjust_blue_flap@no_of_steps:
   278                           	callstack 0
   279   00003B                     adjust_jaw@no_of_steps:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x3A
   283   00003B                     	ds	2
   284   00003D                     sort_light_obj@col:
   285                           	callstack 0
   286   00003D                     sort_heavy_obj@col:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x3C
   290   00003D                     	ds	2
   291   00003F                     ??_sort_light_obj:
   292   00003F                     ??_sort_heavy_obj:
   293                           
   294                           ; 1 bytes @ 0x3E
   295   00003F                     	ds	2
   296   000041                     take_action@c:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x40
   300   000041                     	ds	2
   301   000043                     take_action@w:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x42
   305   000043                     	ds	2
   306   000045                     main@color:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x44
   310   000045                     	ds	2
   311   000047                     main@weight:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x46
   315   000047                     	ds	2
   316                           
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 342 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  weight          2   70[COMRAM] unsigned int 
   327 ;;  color           2   68[COMRAM] unsigned int 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   337 ;;      Params:         0       0       0       0       0       0       0       0       0
   338 ;;      Locals:         4       0       0       0       0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0       0       0
   340 ;;      Totals:         4       0       0       0       0       0       0       0       0
   341 ;;Total ram usage:        4 bytes
   342 ;; Hardware stack levels required when called: 4
   343 ;; This function calls:
   344 ;;		_get_color
   345 ;;		_get_weight
   346 ;;		_init
   347 ;;		_take_action
   348 ;;		_toggle_conveyor
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355   007158                     __ptext0:
   356                           	callstack 0
   357   007158                     _main:
   358                           	callstack 27
   359   007158                     
   360                           ;main.c: 343:     init();
   361   007158  EC83  F038         	call	_init	;wreg free
   362   00715C                     l1972:
   363                           
   364                           ;main.c: 346:         toggle_conveyor(1,0);
   365   00715C  0E00               	movlw	0
   366   00715E  6E02               	movwf	(toggle_conveyor@in_1+1)^0,c
   367   007160  0E01               	movlw	1
   368   007162  6E01               	movwf	toggle_conveyor@in_1^0,c
   369   007164  0E00               	movlw	0
   370   007166  6E04               	movwf	(toggle_conveyor@in_2+1)^0,c
   371   007168  0E00               	movlw	0
   372   00716A  6E03               	movwf	toggle_conveyor@in_2^0,c
   373   00716C  EC0D  F038         	call	_toggle_conveyor	;wreg free
   374   007170                     l117:
   375                           
   376                           ;main.c: 347:         while(PORTCbits.RC0 == 1){
   377   007170  B082               	btfsc	130,0,c	;volatile
   378   007172  EFBD  F038         	goto	u1521
   379   007176  EFBF  F038         	goto	u1520
   380   00717A                     u1521:
   381   00717A  EFB8  F038         	goto	l117
   382   00717E                     u1520:
   383   00717E                     
   384                           ;main.c: 350:         toggle_conveyor(0,0);
   385   00717E  0E00               	movlw	0
   386   007180  6E02               	movwf	(toggle_conveyor@in_1+1)^0,c
   387   007182  0E00               	movlw	0
   388   007184  6E01               	movwf	toggle_conveyor@in_1^0,c
   389   007186  0E00               	movlw	0
   390   007188  6E04               	movwf	(toggle_conveyor@in_2+1)^0,c
   391   00718A  0E00               	movlw	0
   392   00718C  6E03               	movwf	toggle_conveyor@in_2^0,c
   393   00718E  EC0D  F038         	call	_toggle_conveyor	;wreg free
   394   007192                     
   395                           ;main.c: 351:         color = get_color();
   396   007192  EC8B  F039         	call	_get_color	;wreg free
   397   007196  C007  F045         	movff	?_get_color,main@color
   398   00719A  C008  F046         	movff	?_get_color+1,main@color+1
   399   00719E                     
   400                           ;main.c: 352:         weight = get_weight();
   401   00719E  EC18  F038         	call	_get_weight	;wreg free
   402   0071A2  C001  F047         	movff	?_get_weight,main@weight
   403   0071A6  C002  F048         	movff	?_get_weight+1,main@weight+1
   404                           
   405                           ;main.c: 353:         take_action(color, weight);
   406   0071AA  C045  F041         	movff	main@color,take_action@c
   407   0071AE  C046  F042         	movff	main@color+1,take_action@c+1
   408   0071B2  C047  F043         	movff	main@weight,take_action@w
   409   0071B6  C048  F044         	movff	main@weight+1,take_action@w+1
   410   0071BA  EC2A  F039         	call	_take_action	;wreg free
   411   0071BE  EFAE  F038         	goto	l1972
   412   0071C2  EF00  F000         	goto	start
   413   0071C6                     __end_of_main:
   414                           	callstack 0
   415                           
   416 ;; *************** function _take_action *****************
   417 ;; Defined at:
   418 ;;		line 331 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  c               2   64[COMRAM] unsigned int 
   421 ;;  w               2   66[COMRAM] unsigned int 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   433 ;;      Params:         4       0       0       0       0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0       0       0       0       0
   436 ;;      Totals:         4       0       0       0       0       0       0       0       0
   437 ;;Total ram usage:        4 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; Hardware stack levels required when called: 3
   440 ;; This function calls:
   441 ;;		_sort_heavy_obj
   442 ;;		_sort_light_obj
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           	psect	text1
   449   007254                     __ptext1:
   450                           	callstack 0
   451   007254                     _take_action:
   452                           	callstack 27
   453   007254                     
   454                           ;main.c: 332:     if(c == 1 && w == 1)
   455   007254  0441               	decf	take_action@c^0,w,c
   456   007256  1042               	iorwf	(take_action@c+1)^0,w,c
   457   007258  A4D8               	btfss	status,2,c
   458   00725A  EF31  F039         	goto	u1441
   459   00725E  EF33  F039         	goto	u1440
   460   007262                     u1441:
   461   007262  EF44  F039         	goto	l1952
   462   007266                     u1440:
   463   007266  0443               	decf	take_action@w^0,w,c
   464   007268  1044               	iorwf	(take_action@w+1)^0,w,c
   465   00726A  A4D8               	btfss	status,2,c
   466   00726C  EF3A  F039         	goto	u1451
   467   007270  EF3C  F039         	goto	u1450
   468   007274                     u1451:
   469   007274  EF44  F039         	goto	l1952
   470   007278                     u1450:
   471   007278                     l1950:
   472                           
   473                           ;main.c: 333:         sort_light_obj(c);
   474   007278  C041  F03D         	movff	take_action@c,sort_light_obj@col
   475   00727C  C042  F03E         	movff	take_action@c+1,sort_light_obj@col+1
   476   007280  EC78  F03A         	call	_sort_light_obj	;wreg free
   477   007284  EF8A  F039         	goto	l111
   478   007288                     l1952:
   479   007288  0441               	decf	take_action@c^0,w,c
   480   00728A  1042               	iorwf	(take_action@c+1)^0,w,c
   481   00728C  A4D8               	btfss	status,2,c
   482   00728E  EF4B  F039         	goto	u1461
   483   007292  EF4D  F039         	goto	u1460
   484   007296                     u1461:
   485   007296  EF5F  F039         	goto	l1958
   486   00729A                     u1460:
   487   00729A  0E02               	movlw	2
   488   00729C  1843               	xorwf	take_action@w^0,w,c
   489   00729E  1044               	iorwf	(take_action@w+1)^0,w,c
   490   0072A0  A4D8               	btfss	status,2,c
   491   0072A2  EF55  F039         	goto	u1471
   492   0072A6  EF57  F039         	goto	u1470
   493   0072AA                     u1471:
   494   0072AA  EF5F  F039         	goto	l1958
   495   0072AE                     u1470:
   496   0072AE                     l1956:
   497                           
   498                           ;main.c: 335:         sort_heavy_obj(c);
   499   0072AE  C041  F03D         	movff	take_action@c,sort_heavy_obj@col
   500   0072B2  C042  F03E         	movff	take_action@c+1,sort_heavy_obj@col+1
   501   0072B6  ECE3  F038         	call	_sort_heavy_obj	;wreg free
   502   0072BA  EF8A  F039         	goto	l111
   503   0072BE                     l1958:
   504   0072BE  0E02               	movlw	2
   505   0072C0  1841               	xorwf	take_action@c^0,w,c
   506   0072C2  1042               	iorwf	(take_action@c+1)^0,w,c
   507   0072C4  A4D8               	btfss	status,2,c
   508   0072C6  EF67  F039         	goto	u1481
   509   0072CA  EF69  F039         	goto	u1480
   510   0072CE                     u1481:
   511   0072CE  EF74  F039         	goto	l1964
   512   0072D2                     u1480:
   513   0072D2  0443               	decf	take_action@w^0,w,c
   514   0072D4  1044               	iorwf	(take_action@w+1)^0,w,c
   515   0072D6  A4D8               	btfss	status,2,c
   516   0072D8  EF70  F039         	goto	u1491
   517   0072DC  EF72  F039         	goto	u1490
   518   0072E0                     u1491:
   519   0072E0  EF74  F039         	goto	l1964
   520   0072E4                     u1490:
   521   0072E4  EF3C  F039         	goto	l1950
   522   0072E8                     l1964:
   523   0072E8  0E02               	movlw	2
   524   0072EA  1841               	xorwf	take_action@c^0,w,c
   525   0072EC  1042               	iorwf	(take_action@c+1)^0,w,c
   526   0072EE  A4D8               	btfss	status,2,c
   527   0072F0  EF7C  F039         	goto	u1501
   528   0072F4  EF7E  F039         	goto	u1500
   529   0072F8                     u1501:
   530   0072F8  EF8A  F039         	goto	l107
   531   0072FC                     u1500:
   532   0072FC  0E02               	movlw	2
   533   0072FE  1843               	xorwf	take_action@w^0,w,c
   534   007300  1044               	iorwf	(take_action@w+1)^0,w,c
   535   007302  A4D8               	btfss	status,2,c
   536   007304  EF86  F039         	goto	u1511
   537   007308  EF88  F039         	goto	u1510
   538   00730C                     u1511:
   539   00730C  EF8A  F039         	goto	l107
   540   007310                     u1510:
   541   007310  EF57  F039         	goto	l1956
   542   007314                     l107:
   543   007314                     l111:
   544   007314  0012               	return		;funcret
   545   007316                     __end_of_take_action:
   546                           	callstack 0
   547                           
   548 ;; *************** function _sort_light_obj *****************
   549 ;; Defined at:
   550 ;;		line 295 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  col             2   60[COMRAM] unsigned int 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   564 ;;      Params:         2       0       0       0       0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0
   566 ;;      Temps:          2       0       0       0       0       0       0       0       0
   567 ;;      Totals:         4       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:        4 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 2
   571 ;; This function calls:
   572 ;;		_adjust_blue_flap
   573 ;;		_adjust_red_flap
   574 ;;		_msDelay
   575 ;;		_toggle_conveyor
   576 ;; This function is called by:
   577 ;;		_take_action
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text2
   582   0074F0                     __ptext2:
   583                           	callstack 0
   584   0074F0                     _sort_light_obj:
   585                           	callstack 27
   586   0074F0                     
   587                           ;main.c: 296:     if(col == 1) {
   588   0074F0  043D               	decf	sort_light_obj@col^0,w,c
   589   0074F2  103E               	iorwf	(sort_light_obj@col+1)^0,w,c
   590   0074F4  A4D8               	btfss	status,2,c
   591   0074F6  EF7F  F03A         	goto	u1361
   592   0074FA  EF81  F03A         	goto	u1360
   593   0074FE                     u1361:
   594   0074FE  EFC7  F03A         	goto	l1862
   595   007502                     u1360:
   596   007502                     
   597                           ;main.c: 297:         adjust_red_flap(45,0);
   598   007502  0E00               	movlw	0
   599   007504  6E33               	movwf	(adjust_red_flap@degrees+1)^0,c
   600   007506  0E2D               	movlw	45
   601   007508  6E32               	movwf	adjust_red_flap@degrees^0,c
   602   00750A  0E00               	movlw	0
   603   00750C  6E35               	movwf	(adjust_red_flap@direction+1)^0,c
   604   00750E  0E00               	movlw	0
   605   007510  6E34               	movwf	adjust_red_flap@direction^0,c
   606   007512  EC95  F03C         	call	_adjust_red_flap	;wreg free
   607   007516                     
   608                           ;main.c: 298:         _delay((unsigned long)((500)*(16000000/4000.0)));
   609   007516  0E0B               	movlw	11
   610   007518  6E40               	movwf	(??_sort_light_obj+1)^0,c
   611   00751A  0E26               	movlw	38
   612   00751C  6E3F               	movwf	??_sort_light_obj^0,c
   613   00751E  0E5E               	movlw	94
   614   007520                     u1537:
   615   007520  2EE8               	decfsz	wreg,f,c
   616   007522  D7FE               	bra	u1537
   617   007524  2E3F               	decfsz	??_sort_light_obj^0,f,c
   618   007526  D7FC               	bra	u1537
   619   007528  2E40               	decfsz	(??_sort_light_obj+1)^0,f,c
   620   00752A  D7FA               	bra	u1537
   621   00752C                     
   622                           ;main.c: 299:         toggle_conveyor(1,0);
   623   00752C  0E00               	movlw	0
   624   00752E  6E02               	movwf	(toggle_conveyor@in_1+1)^0,c
   625   007530  0E01               	movlw	1
   626   007532  6E01               	movwf	toggle_conveyor@in_1^0,c
   627   007534  0E00               	movlw	0
   628   007536  6E04               	movwf	(toggle_conveyor@in_2+1)^0,c
   629   007538  0E00               	movlw	0
   630   00753A  6E03               	movwf	toggle_conveyor@in_2^0,c
   631   00753C  EC0D  F038         	call	_toggle_conveyor	;wreg free
   632   007540                     
   633                           ;main.c: 300:         msDelay(25000);
   634   007540  0E61               	movlw	97
   635   007542  6E02               	movwf	(msDelay@t+1)^0,c
   636   007544  0EA8               	movlw	168
   637   007546  6E01               	movwf	msDelay@t^0,c
   638   007548  EC37  F038         	call	_msDelay	;wreg free
   639   00754C                     
   640                           ;main.c: 301:         toggle_conveyor(0,0);
   641   00754C  0E00               	movlw	0
   642   00754E  6E02               	movwf	(toggle_conveyor@in_1+1)^0,c
   643   007550  0E00               	movlw	0
   644   007552  6E01               	movwf	toggle_conveyor@in_1^0,c
   645   007554  0E00               	movlw	0
   646   007556  6E04               	movwf	(toggle_conveyor@in_2+1)^0,c
   647   007558  0E00               	movlw	0
   648   00755A  6E03               	movwf	toggle_conveyor@in_2^0,c
   649   00755C  EC0D  F038         	call	_toggle_conveyor	;wreg free
   650   007560                     
   651                           ;main.c: 302:         adjust_red_flap(45,1);
   652   007560  0E00               	movlw	0
   653   007562  6E33               	movwf	(adjust_red_flap@degrees+1)^0,c
   654   007564  0E2D               	movlw	45
   655   007566  6E32               	movwf	adjust_red_flap@degrees^0,c
   656   007568  0E00               	movlw	0
   657   00756A  6E35               	movwf	(adjust_red_flap@direction+1)^0,c
   658   00756C  0E01               	movlw	1
   659   00756E  6E34               	movwf	adjust_red_flap@direction^0,c
   660   007570  EC95  F03C         	call	_adjust_red_flap	;wreg free
   661   007574                     l1860:
   662                           
   663                           ;main.c: 303:         _delay((unsigned long)((500)*(16000000/4000.0)));
   664   007574  0E0B               	movlw	11
   665   007576  6E40               	movwf	(??_sort_light_obj+1)^0,c
   666   007578  0E26               	movlw	38
   667   00757A  6E3F               	movwf	??_sort_light_obj^0,c
   668   00757C  0E5E               	movlw	94
   669   00757E                     u1547:
   670   00757E  2EE8               	decfsz	wreg,f,c
   671   007580  D7FE               	bra	u1547
   672   007582  2E3F               	decfsz	??_sort_light_obj^0,f,c
   673   007584  D7FC               	bra	u1547
   674   007586  2E40               	decfsz	(??_sort_light_obj+1)^0,f,c
   675   007588  D7FA               	bra	u1547
   676                           
   677                           ;main.c: 304:     }
   678   00758A  EF0C  F03B         	goto	l95
   679   00758E                     l1862:
   680   00758E  0E02               	movlw	2
   681   007590  183D               	xorwf	sort_light_obj@col^0,w,c
   682   007592  103E               	iorwf	(sort_light_obj@col+1)^0,w,c
   683   007594  A4D8               	btfss	status,2,c
   684   007596  EFCF  F03A         	goto	u1371
   685   00759A  EFD1  F03A         	goto	u1370
   686   00759E                     u1371:
   687   00759E  EF0C  F03B         	goto	l95
   688   0075A2                     u1370:
   689   0075A2                     
   690                           ;main.c: 306:         adjust_blue_flap(45,0);
   691   0075A2  0E00               	movlw	0
   692   0075A4  6E33               	movwf	(adjust_blue_flap@degrees+1)^0,c
   693   0075A6  0E2D               	movlw	45
   694   0075A8  6E32               	movwf	adjust_blue_flap@degrees^0,c
   695   0075AA  0E00               	movlw	0
   696   0075AC  6E35               	movwf	(adjust_blue_flap@direction+1)^0,c
   697   0075AE  0E00               	movlw	0
   698   0075B0  6E34               	movwf	adjust_blue_flap@direction^0,c
   699   0075B2  ECD1  F03B         	call	_adjust_blue_flap	;wreg free
   700   0075B6                     
   701                           ;main.c: 307:         _delay((unsigned long)((500)*(16000000/4000.0)));
   702   0075B6  0E0B               	movlw	11
   703   0075B8  6E40               	movwf	(??_sort_light_obj+1)^0,c
   704   0075BA  0E26               	movlw	38
   705   0075BC  6E3F               	movwf	??_sort_light_obj^0,c
   706   0075BE  0E5E               	movlw	94
   707   0075C0                     u1557:
   708   0075C0  2EE8               	decfsz	wreg,f,c
   709   0075C2  D7FE               	bra	u1557
   710   0075C4  2E3F               	decfsz	??_sort_light_obj^0,f,c
   711   0075C6  D7FC               	bra	u1557
   712   0075C8  2E40               	decfsz	(??_sort_light_obj+1)^0,f,c
   713   0075CA  D7FA               	bra	u1557
   714   0075CC                     
   715                           ;main.c: 308:         toggle_conveyor(1, 0);
   716   0075CC  0E00               	movlw	0
   717   0075CE  6E02               	movwf	(toggle_conveyor@in_1+1)^0,c
   718   0075D0  0E01               	movlw	1
   719   0075D2  6E01               	movwf	toggle_conveyor@in_1^0,c
   720   0075D4  0E00               	movlw	0
   721   0075D6  6E04               	movwf	(toggle_conveyor@in_2+1)^0,c
   722   0075D8  0E00               	movlw	0
   723   0075DA  6E03               	movwf	toggle_conveyor@in_2^0,c
   724   0075DC  EC0D  F038         	call	_toggle_conveyor	;wreg free
   725   0075E0                     
   726                           ;main.c: 309:         msDelay(35000);
   727   0075E0  0E88               	movlw	136
   728   0075E2  6E02               	movwf	(msDelay@t+1)^0,c
   729   0075E4  0EB8               	movlw	184
   730   0075E6  6E01               	movwf	msDelay@t^0,c
   731   0075E8  EC37  F038         	call	_msDelay	;wreg free
   732   0075EC                     
   733                           ;main.c: 310:         toggle_conveyor(0, 0);
   734   0075EC  0E00               	movlw	0
   735   0075EE  6E02               	movwf	(toggle_conveyor@in_1+1)^0,c
   736   0075F0  0E00               	movlw	0
   737   0075F2  6E01               	movwf	toggle_conveyor@in_1^0,c
   738   0075F4  0E00               	movlw	0
   739   0075F6  6E04               	movwf	(toggle_conveyor@in_2+1)^0,c
   740   0075F8  0E00               	movlw	0
   741   0075FA  6E03               	movwf	toggle_conveyor@in_2^0,c
   742   0075FC  EC0D  F038         	call	_toggle_conveyor	;wreg free
   743   007600                     
   744                           ;main.c: 311:         adjust_blue_flap(45,1);
   745   007600  0E00               	movlw	0
   746   007602  6E33               	movwf	(adjust_blue_flap@degrees+1)^0,c
   747   007604  0E2D               	movlw	45
   748   007606  6E32               	movwf	adjust_blue_flap@degrees^0,c
   749   007608  0E00               	movlw	0
   750   00760A  6E35               	movwf	(adjust_blue_flap@direction+1)^0,c
   751   00760C  0E01               	movlw	1
   752   00760E  6E34               	movwf	adjust_blue_flap@direction^0,c
   753   007610  ECD1  F03B         	call	_adjust_blue_flap	;wreg free
   754   007614  EFBA  F03A         	goto	l1860
   755   007618                     l95:
   756   007618  0012               	return		;funcret
   757   00761A                     __end_of_sort_light_obj:
   758                           	callstack 0
   759                           
   760 ;; *************** function _adjust_red_flap *****************
   761 ;; Defined at:
   762 ;;		line 139 in file "main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  degrees         2   49[COMRAM] unsigned int 
   765 ;;  direction       2   51[COMRAM] unsigned int 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  i               2   56[COMRAM] unsigned int 
   768 ;;  i               2   54[COMRAM] unsigned int 
   769 ;;  no_of_steps     2   58[COMRAM] unsigned int 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   779 ;;      Params:         4       0       0       0       0       0       0       0       0
   780 ;;      Locals:         6       0       0       0       0       0       0       0       0
   781 ;;      Temps:          1       0       0       0       0       0       0       0       0
   782 ;;      Totals:        11       0       0       0       0       0       0       0       0
   783 ;;Total ram usage:       11 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 1
   786 ;; This function calls:
   787 ;;		___fldiv
   788 ;;		___fltol
   789 ;;		___xxtofl
   790 ;; This function is called by:
   791 ;;		_sort_light_obj
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text3
   796   00792A                     __ptext3:
   797                           	callstack 0
   798   00792A                     _adjust_red_flap:
   799                           	callstack 27
   800   00792A                     
   801                           ;main.c: 141:     unsigned int no_of_steps = (unsigned int)(degrees / 5.625);
   802   00792A  0E00               	movlw	0
   803   00792C  6E13               	movwf	___fldiv@a^0,c
   804   00792E  0E00               	movlw	0
   805   007930  6E14               	movwf	(___fldiv@a+1)^0,c
   806   007932  0EB4               	movlw	180
   807   007934  6E15               	movwf	(___fldiv@a+2)^0,c
   808   007936  0E40               	movlw	64
   809   007938  6E16               	movwf	(___fldiv@a+3)^0,c
   810   00793A  C032  F001         	movff	adjust_red_flap@degrees,___xxtofl@val
   811   00793E  C033  F002         	movff	adjust_red_flap@degrees+1,___xxtofl@val+1
   812   007942  6A03               	clrf	(___xxtofl@val+2)^0,c
   813   007944  6A04               	clrf	(___xxtofl@val+3)^0,c
   814   007946  0E00               	movlw	0
   815   007948  EC59  F03D         	call	___xxtofl
   816   00794C  C001  F00F         	movff	?___xxtofl,___fldiv@b
   817   007950  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
   818   007954  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
   819   007958  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
   820   00795C  EC33  F03E         	call	___fldiv	;wreg free
   821   007960  C00F  F028         	movff	?___fldiv,___fltol@f1
   822   007964  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
   823   007968  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
   824   00796C  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
   825   007970  ECF5  F039         	call	___fltol	;wreg free
   826   007974  C028  F03B         	movff	?___fltol,adjust_red_flap@no_of_steps
   827   007978  C029  F03C         	movff	?___fltol+1,adjust_red_flap@no_of_steps+1
   828   00797C                     
   829                           ;main.c: 142:     if(direction == 0) {
   830   00797C  5034               	movf	adjust_red_flap@direction^0,w,c
   831   00797E  1035               	iorwf	(adjust_red_flap@direction+1)^0,w,c
   832   007980  A4D8               	btfss	status,2,c
   833   007982  EFC5  F03C         	goto	u1211
   834   007986  EFC7  F03C         	goto	u1210
   835   00798A                     u1211:
   836   00798A  EF0C  F03D         	goto	l1672
   837   00798E                     u1210:
   838   00798E                     
   839                           ;main.c: 143:         for(unsigned int i=0; i<no_of_steps; i++) {
   840   00798E  0E00               	movlw	0
   841   007990  6E38               	movwf	(adjust_red_flap@i+1)^0,c
   842   007992  0E00               	movlw	0
   843   007994  6E37               	movwf	adjust_red_flap@i^0,c
   844   007996  EFFF  F03C         	goto	l57
   845   00799A                     l58:
   846                           
   847                           ;main.c: 144:             PORTAbits.RA2 = 1;
   848   00799A  8480               	bsf	128,2,c	;volatile
   849                           
   850                           ;main.c: 145:             PORTAbits.RA3 = 0;
   851   00799C  9680               	bcf	128,3,c	;volatile
   852                           
   853                           ;main.c: 146:             PORTAbits.RA4 = 0;
   854   00799E  9880               	bcf	128,4,c	;volatile
   855                           
   856                           ;main.c: 147:             PORTAbits.RA5 = 0;
   857   0079A0  9A80               	bcf	128,5,c	;volatile
   858   0079A2                     
   859                           ;main.c: 148:             _delay((unsigned long)((2)*(16000000/4000.0)));
   860   0079A2  0E0B               	movlw	11
   861   0079A4  6E36               	movwf	??_adjust_red_flap^0,c
   862   0079A6  0E62               	movlw	98
   863   0079A8                     u1567:
   864   0079A8  2EE8               	decfsz	wreg,f,c
   865   0079AA  D7FE               	bra	u1567
   866   0079AC  2E36               	decfsz	??_adjust_red_flap^0,f,c
   867   0079AE  D7FC               	bra	u1567
   868   0079B0  D000               	nop2	
   869   0079B2                     
   870                           ;main.c: 149:             PORTAbits.RA2 = 0;
   871   0079B2  9480               	bcf	128,2,c	;volatile
   872   0079B4                     
   873                           ;main.c: 150:             PORTAbits.RA3 = 1;
   874   0079B4  8680               	bsf	128,3,c	;volatile
   875   0079B6                     
   876                           ;main.c: 151:             PORTAbits.RA4 = 0;
   877   0079B6  9880               	bcf	128,4,c	;volatile
   878   0079B8                     
   879                           ;main.c: 152:             PORTAbits.RA5 = 0;
   880   0079B8  9A80               	bcf	128,5,c	;volatile
   881                           
   882                           ;main.c: 153:             _delay((unsigned long)((2)*(16000000/4000.0)));
   883   0079BA  0E0B               	movlw	11
   884   0079BC  6E36               	movwf	??_adjust_red_flap^0,c
   885   0079BE  0E62               	movlw	98
   886   0079C0                     u1577:
   887   0079C0  2EE8               	decfsz	wreg,f,c
   888   0079C2  D7FE               	bra	u1577
   889   0079C4  2E36               	decfsz	??_adjust_red_flap^0,f,c
   890   0079C6  D7FC               	bra	u1577
   891   0079C8  D000               	nop2	
   892   0079CA                     
   893                           ;main.c: 154:             PORTAbits.RA2 = 0;
   894   0079CA  9480               	bcf	128,2,c	;volatile
   895   0079CC                     
   896                           ;main.c: 155:             PORTAbits.RA3 = 0;
   897   0079CC  9680               	bcf	128,3,c	;volatile
   898   0079CE                     
   899                           ;main.c: 156:             PORTAbits.RA4 = 1;
   900   0079CE  8880               	bsf	128,4,c	;volatile
   901   0079D0                     
   902                           ;main.c: 157:             PORTAbits.RA5 = 0;
   903   0079D0  9A80               	bcf	128,5,c	;volatile
   904                           
   905                           ;main.c: 158:             _delay((unsigned long)((2)*(16000000/4000.0)));
   906   0079D2  0E0B               	movlw	11
   907   0079D4  6E36               	movwf	??_adjust_red_flap^0,c
   908   0079D6  0E62               	movlw	98
   909   0079D8                     u1587:
   910   0079D8  2EE8               	decfsz	wreg,f,c
   911   0079DA  D7FE               	bra	u1587
   912   0079DC  2E36               	decfsz	??_adjust_red_flap^0,f,c
   913   0079DE  D7FC               	bra	u1587
   914   0079E0  D000               	nop2	
   915   0079E2                     
   916                           ;main.c: 159:             PORTAbits.RA2 = 0;
   917   0079E2  9480               	bcf	128,2,c	;volatile
   918   0079E4                     
   919                           ;main.c: 160:             PORTAbits.RA3 = 0;
   920   0079E4  9680               	bcf	128,3,c	;volatile
   921   0079E6                     
   922                           ;main.c: 161:             PORTAbits.RA4 = 0;
   923   0079E6  9880               	bcf	128,4,c	;volatile
   924   0079E8                     
   925                           ;main.c: 162:             PORTAbits.RA5 = 1;
   926   0079E8  8A80               	bsf	128,5,c	;volatile
   927                           
   928                           ;main.c: 163:             _delay((unsigned long)((2)*(16000000/4000.0)));
   929   0079EA  0E0B               	movlw	11
   930   0079EC  6E36               	movwf	??_adjust_red_flap^0,c
   931   0079EE  0E62               	movlw	98
   932   0079F0                     u1597:
   933   0079F0  2EE8               	decfsz	wreg,f,c
   934   0079F2  D7FE               	bra	u1597
   935   0079F4  2E36               	decfsz	??_adjust_red_flap^0,f,c
   936   0079F6  D7FC               	bra	u1597
   937   0079F8  D000               	nop2	
   938   0079FA                     
   939                           ;main.c: 164:         }
   940   0079FA  4A37               	infsnz	adjust_red_flap@i^0,f,c
   941   0079FC  2A38               	incf	(adjust_red_flap@i+1)^0,f,c
   942   0079FE                     l57:
   943   0079FE  503B               	movf	adjust_red_flap@no_of_steps^0,w,c
   944   007A00  5C37               	subwf	adjust_red_flap@i^0,w,c
   945   007A02  503C               	movf	(adjust_red_flap@no_of_steps+1)^0,w,c
   946   007A04  5838               	subwfb	(adjust_red_flap@i+1)^0,w,c
   947   007A06  A0D8               	btfss	status,0,c
   948   007A08  EF08  F03D         	goto	u1221
   949   007A0C  EF0A  F03D         	goto	u1220
   950   007A10                     u1221:
   951   007A10  EFCD  F03C         	goto	l58
   952   007A14                     u1220:
   953   007A14  EF58  F03D         	goto	l65
   954   007A18                     l1672:
   955   007A18  0434               	decf	adjust_red_flap@direction^0,w,c
   956   007A1A  1035               	iorwf	(adjust_red_flap@direction+1)^0,w,c
   957   007A1C  A4D8               	btfss	status,2,c
   958   007A1E  EF13  F03D         	goto	u1231
   959   007A22  EF15  F03D         	goto	u1230
   960   007A26                     u1231:
   961   007A26  EF58  F03D         	goto	l65
   962   007A2A                     u1230:
   963   007A2A                     
   964                           ;main.c: 167:         for(unsigned int i=0; i<no_of_steps; i++) {
   965   007A2A  0E00               	movlw	0
   966   007A2C  6E3A               	movwf	(adjust_red_flap@i_560+1)^0,c
   967   007A2E  0E00               	movlw	0
   968   007A30  6E39               	movwf	adjust_red_flap@i_560^0,c
   969   007A32  EF4D  F03D         	goto	l62
   970   007A36                     l63:
   971                           
   972                           ;main.c: 168:             PORTAbits.RA2 = 0;
   973   007A36  9480               	bcf	128,2,c	;volatile
   974                           
   975                           ;main.c: 169:             PORTAbits.RA3 = 0;
   976   007A38  9680               	bcf	128,3,c	;volatile
   977                           
   978                           ;main.c: 170:             PORTAbits.RA4 = 0;
   979   007A3A  9880               	bcf	128,4,c	;volatile
   980                           
   981                           ;main.c: 171:             PORTAbits.RA5 = 1;
   982   007A3C  8A80               	bsf	128,5,c	;volatile
   983   007A3E                     
   984                           ;main.c: 172:             _delay((unsigned long)((2)*(16000000/4000.0)));
   985   007A3E  0E0B               	movlw	11
   986   007A40  6E36               	movwf	??_adjust_red_flap^0,c
   987   007A42  0E62               	movlw	98
   988   007A44                     u1607:
   989   007A44  2EE8               	decfsz	wreg,f,c
   990   007A46  D7FE               	bra	u1607
   991   007A48  2E36               	decfsz	??_adjust_red_flap^0,f,c
   992   007A4A  D7FC               	bra	u1607
   993   007A4C  D000               	nop2	
   994   007A4E                     
   995                           ;main.c: 173:             PORTAbits.RA2 = 0;
   996   007A4E  9480               	bcf	128,2,c	;volatile
   997   007A50                     
   998                           ;main.c: 174:             PORTAbits.RA3 = 0;
   999   007A50  9680               	bcf	128,3,c	;volatile
  1000   007A52                     
  1001                           ;main.c: 175:             PORTAbits.RA4 = 1;
  1002   007A52  8880               	bsf	128,4,c	;volatile
  1003   007A54                     
  1004                           ;main.c: 176:             PORTAbits.RA5 = 0;
  1005   007A54  9A80               	bcf	128,5,c	;volatile
  1006                           
  1007                           ;main.c: 177:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1008   007A56  0E0B               	movlw	11
  1009   007A58  6E36               	movwf	??_adjust_red_flap^0,c
  1010   007A5A  0E62               	movlw	98
  1011   007A5C                     u1617:
  1012   007A5C  2EE8               	decfsz	wreg,f,c
  1013   007A5E  D7FE               	bra	u1617
  1014   007A60  2E36               	decfsz	??_adjust_red_flap^0,f,c
  1015   007A62  D7FC               	bra	u1617
  1016   007A64  D000               	nop2	
  1017   007A66                     
  1018                           ;main.c: 178:             PORTAbits.RA2 = 0;
  1019   007A66  9480               	bcf	128,2,c	;volatile
  1020   007A68                     
  1021                           ;main.c: 179:             PORTAbits.RA3 = 1;
  1022   007A68  8680               	bsf	128,3,c	;volatile
  1023   007A6A                     
  1024                           ;main.c: 180:             PORTAbits.RA4 = 0;
  1025   007A6A  9880               	bcf	128,4,c	;volatile
  1026   007A6C                     
  1027                           ;main.c: 181:             PORTAbits.RA5 = 0;
  1028   007A6C  9A80               	bcf	128,5,c	;volatile
  1029                           
  1030                           ;main.c: 182:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1031   007A6E  0E0B               	movlw	11
  1032   007A70  6E36               	movwf	??_adjust_red_flap^0,c
  1033   007A72  0E62               	movlw	98
  1034   007A74                     u1627:
  1035   007A74  2EE8               	decfsz	wreg,f,c
  1036   007A76  D7FE               	bra	u1627
  1037   007A78  2E36               	decfsz	??_adjust_red_flap^0,f,c
  1038   007A7A  D7FC               	bra	u1627
  1039   007A7C  D000               	nop2	
  1040   007A7E                     
  1041                           ;main.c: 183:             PORTAbits.RA2 = 1;
  1042   007A7E  8480               	bsf	128,2,c	;volatile
  1043   007A80                     
  1044                           ;main.c: 184:             PORTAbits.RA3 = 0;
  1045   007A80  9680               	bcf	128,3,c	;volatile
  1046   007A82                     
  1047                           ;main.c: 185:             PORTAbits.RA4 = 0;
  1048   007A82  9880               	bcf	128,4,c	;volatile
  1049   007A84                     
  1050                           ;main.c: 186:             PORTAbits.RA5 = 0;
  1051   007A84  9A80               	bcf	128,5,c	;volatile
  1052                           
  1053                           ;main.c: 187:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1054   007A86  0E0B               	movlw	11
  1055   007A88  6E36               	movwf	??_adjust_red_flap^0,c
  1056   007A8A  0E62               	movlw	98
  1057   007A8C                     u1637:
  1058   007A8C  2EE8               	decfsz	wreg,f,c
  1059   007A8E  D7FE               	bra	u1637
  1060   007A90  2E36               	decfsz	??_adjust_red_flap^0,f,c
  1061   007A92  D7FC               	bra	u1637
  1062   007A94  D000               	nop2	
  1063   007A96                     
  1064                           ;main.c: 188:         }
  1065   007A96  4A39               	infsnz	adjust_red_flap@i_560^0,f,c
  1066   007A98  2A3A               	incf	(adjust_red_flap@i_560+1)^0,f,c
  1067   007A9A                     l62:
  1068   007A9A  503B               	movf	adjust_red_flap@no_of_steps^0,w,c
  1069   007A9C  5C39               	subwf	adjust_red_flap@i_560^0,w,c
  1070   007A9E  503C               	movf	(adjust_red_flap@no_of_steps+1)^0,w,c
  1071   007AA0  583A               	subwfb	(adjust_red_flap@i_560+1)^0,w,c
  1072   007AA2  A0D8               	btfss	status,0,c
  1073   007AA4  EF56  F03D         	goto	u1241
  1074   007AA8  EF58  F03D         	goto	u1240
  1075   007AAC                     u1241:
  1076   007AAC  EF1B  F03D         	goto	l63
  1077   007AB0                     u1240:
  1078   007AB0                     l65:
  1079   007AB0  0012               	return		;funcret
  1080   007AB2                     __end_of_adjust_red_flap:
  1081                           	callstack 0
  1082                           
  1083 ;; *************** function _adjust_blue_flap *****************
  1084 ;; Defined at:
  1085 ;;		line 191 in file "main.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  degrees         2   49[COMRAM] unsigned int 
  1088 ;;  direction       2   51[COMRAM] unsigned int 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  i               2   56[COMRAM] unsigned int 
  1091 ;;  i               2   54[COMRAM] unsigned int 
  1092 ;;  no_of_steps     2   58[COMRAM] unsigned int 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1102 ;;      Params:         4       0       0       0       0       0       0       0       0
  1103 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1104 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1105 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1106 ;;Total ram usage:       11 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 1
  1109 ;; This function calls:
  1110 ;;		___fldiv
  1111 ;;		___fltol
  1112 ;;		___xxtofl
  1113 ;; This function is called by:
  1114 ;;		_sort_light_obj
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text4
  1119   0077A2                     __ptext4:
  1120                           	callstack 0
  1121   0077A2                     _adjust_blue_flap:
  1122                           	callstack 27
  1123   0077A2                     
  1124                           ;main.c: 193:     unsigned int no_of_steps = (unsigned int)(degrees / 5.625);
  1125   0077A2  0E00               	movlw	0
  1126   0077A4  6E13               	movwf	___fldiv@a^0,c
  1127   0077A6  0E00               	movlw	0
  1128   0077A8  6E14               	movwf	(___fldiv@a+1)^0,c
  1129   0077AA  0EB4               	movlw	180
  1130   0077AC  6E15               	movwf	(___fldiv@a+2)^0,c
  1131   0077AE  0E40               	movlw	64
  1132   0077B0  6E16               	movwf	(___fldiv@a+3)^0,c
  1133   0077B2  C032  F001         	movff	adjust_blue_flap@degrees,___xxtofl@val
  1134   0077B6  C033  F002         	movff	adjust_blue_flap@degrees+1,___xxtofl@val+1
  1135   0077BA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1136   0077BC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1137   0077BE  0E00               	movlw	0
  1138   0077C0  EC59  F03D         	call	___xxtofl
  1139   0077C4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1140   0077C8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1141   0077CC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1142   0077D0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1143   0077D4  EC33  F03E         	call	___fldiv	;wreg free
  1144   0077D8  C00F  F028         	movff	?___fldiv,___fltol@f1
  1145   0077DC  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  1146   0077E0  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  1147   0077E4  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  1148   0077E8  ECF5  F039         	call	___fltol	;wreg free
  1149   0077EC  C028  F03B         	movff	?___fltol,adjust_blue_flap@no_of_steps
  1150   0077F0  C029  F03C         	movff	?___fltol+1,adjust_blue_flap@no_of_steps+1
  1151   0077F4                     
  1152                           ;main.c: 194:     if(direction == 0) {
  1153   0077F4  5034               	movf	adjust_blue_flap@direction^0,w,c
  1154   0077F6  1035               	iorwf	(adjust_blue_flap@direction+1)^0,w,c
  1155   0077F8  A4D8               	btfss	status,2,c
  1156   0077FA  EF01  F03C         	goto	u1251
  1157   0077FE  EF03  F03C         	goto	u1250
  1158   007802                     u1251:
  1159   007802  EF48  F03C         	goto	l1738
  1160   007806                     u1250:
  1161   007806                     
  1162                           ;main.c: 195:         for(unsigned int i=0; i<no_of_steps; i++) {
  1163   007806  0E00               	movlw	0
  1164   007808  6E38               	movwf	(adjust_blue_flap@i+1)^0,c
  1165   00780A  0E00               	movlw	0
  1166   00780C  6E37               	movwf	adjust_blue_flap@i^0,c
  1167   00780E  EF3B  F03C         	goto	l69
  1168   007812                     l70:
  1169                           
  1170                           ;main.c: 196:             PORTBbits.RB0 = 1;
  1171   007812  8081               	bsf	129,0,c	;volatile
  1172                           
  1173                           ;main.c: 197:             PORTBbits.RB1 = 0;
  1174   007814  9281               	bcf	129,1,c	;volatile
  1175                           
  1176                           ;main.c: 198:             PORTBbits.RB2 = 0;
  1177   007816  9481               	bcf	129,2,c	;volatile
  1178                           
  1179                           ;main.c: 199:             PORTBbits.RB3 = 0;
  1180   007818  9681               	bcf	129,3,c	;volatile
  1181   00781A                     
  1182                           ;main.c: 200:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1183   00781A  0E0B               	movlw	11
  1184   00781C  6E36               	movwf	??_adjust_blue_flap^0,c
  1185   00781E  0E62               	movlw	98
  1186   007820                     u1647:
  1187   007820  2EE8               	decfsz	wreg,f,c
  1188   007822  D7FE               	bra	u1647
  1189   007824  2E36               	decfsz	??_adjust_blue_flap^0,f,c
  1190   007826  D7FC               	bra	u1647
  1191   007828  D000               	nop2	
  1192   00782A                     
  1193                           ;main.c: 201:             PORTBbits.RB0 = 0;
  1194   00782A  9081               	bcf	129,0,c	;volatile
  1195   00782C                     
  1196                           ;main.c: 202:             PORTBbits.RB1 = 1;
  1197   00782C  8281               	bsf	129,1,c	;volatile
  1198   00782E                     
  1199                           ;main.c: 203:             PORTBbits.RB2 = 0;
  1200   00782E  9481               	bcf	129,2,c	;volatile
  1201   007830                     
  1202                           ;main.c: 204:             PORTBbits.RB3 = 0;
  1203   007830  9681               	bcf	129,3,c	;volatile
  1204                           
  1205                           ;main.c: 205:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1206   007832  0E0B               	movlw	11
  1207   007834  6E36               	movwf	??_adjust_blue_flap^0,c
  1208   007836  0E62               	movlw	98
  1209   007838                     u1657:
  1210   007838  2EE8               	decfsz	wreg,f,c
  1211   00783A  D7FE               	bra	u1657
  1212   00783C  2E36               	decfsz	??_adjust_blue_flap^0,f,c
  1213   00783E  D7FC               	bra	u1657
  1214   007840  D000               	nop2	
  1215   007842                     
  1216                           ;main.c: 206:             PORTBbits.RB0 = 0;
  1217   007842  9081               	bcf	129,0,c	;volatile
  1218   007844                     
  1219                           ;main.c: 207:             PORTBbits.RB1 = 0;
  1220   007844  9281               	bcf	129,1,c	;volatile
  1221   007846                     
  1222                           ;main.c: 208:             PORTBbits.RB2 = 1;
  1223   007846  8481               	bsf	129,2,c	;volatile
  1224   007848                     
  1225                           ;main.c: 209:             PORTBbits.RB3 = 0;
  1226   007848  9681               	bcf	129,3,c	;volatile
  1227                           
  1228                           ;main.c: 210:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1229   00784A  0E0B               	movlw	11
  1230   00784C  6E36               	movwf	??_adjust_blue_flap^0,c
  1231   00784E  0E62               	movlw	98
  1232   007850                     u1667:
  1233   007850  2EE8               	decfsz	wreg,f,c
  1234   007852  D7FE               	bra	u1667
  1235   007854  2E36               	decfsz	??_adjust_blue_flap^0,f,c
  1236   007856  D7FC               	bra	u1667
  1237   007858  D000               	nop2	
  1238   00785A                     
  1239                           ;main.c: 211:             PORTBbits.RB0 = 0;
  1240   00785A  9081               	bcf	129,0,c	;volatile
  1241   00785C                     
  1242                           ;main.c: 212:             PORTBbits.RB1 = 0;
  1243   00785C  9281               	bcf	129,1,c	;volatile
  1244   00785E                     
  1245                           ;main.c: 213:             PORTBbits.RB2 = 0;
  1246   00785E  9481               	bcf	129,2,c	;volatile
  1247   007860                     
  1248                           ;main.c: 214:             PORTBbits.RB3 = 1;
  1249   007860  8681               	bsf	129,3,c	;volatile
  1250                           
  1251                           ;main.c: 215:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1252   007862  0E0B               	movlw	11
  1253   007864  6E36               	movwf	??_adjust_blue_flap^0,c
  1254   007866  0E62               	movlw	98
  1255   007868                     u1677:
  1256   007868  2EE8               	decfsz	wreg,f,c
  1257   00786A  D7FE               	bra	u1677
  1258   00786C  2E36               	decfsz	??_adjust_blue_flap^0,f,c
  1259   00786E  D7FC               	bra	u1677
  1260   007870  D000               	nop2	
  1261   007872                     
  1262                           ;main.c: 216:         }
  1263   007872  4A37               	infsnz	adjust_blue_flap@i^0,f,c
  1264   007874  2A38               	incf	(adjust_blue_flap@i+1)^0,f,c
  1265   007876                     l69:
  1266   007876  503B               	movf	adjust_blue_flap@no_of_steps^0,w,c
  1267   007878  5C37               	subwf	adjust_blue_flap@i^0,w,c
  1268   00787A  503C               	movf	(adjust_blue_flap@no_of_steps+1)^0,w,c
  1269   00787C  5838               	subwfb	(adjust_blue_flap@i+1)^0,w,c
  1270   00787E  A0D8               	btfss	status,0,c
  1271   007880  EF44  F03C         	goto	u1261
  1272   007884  EF46  F03C         	goto	u1260
  1273   007888                     u1261:
  1274   007888  EF09  F03C         	goto	l70
  1275   00788C                     u1260:
  1276   00788C  EF94  F03C         	goto	l77
  1277   007890                     l1738:
  1278   007890  0434               	decf	adjust_blue_flap@direction^0,w,c
  1279   007892  1035               	iorwf	(adjust_blue_flap@direction+1)^0,w,c
  1280   007894  A4D8               	btfss	status,2,c
  1281   007896  EF4F  F03C         	goto	u1271
  1282   00789A  EF51  F03C         	goto	u1270
  1283   00789E                     u1271:
  1284   00789E  EF94  F03C         	goto	l77
  1285   0078A2                     u1270:
  1286   0078A2                     
  1287                           ;main.c: 219:         for(unsigned int i=0; i<no_of_steps; i++) {
  1288   0078A2  0E00               	movlw	0
  1289   0078A4  6E3A               	movwf	(adjust_blue_flap@i_574+1)^0,c
  1290   0078A6  0E00               	movlw	0
  1291   0078A8  6E39               	movwf	adjust_blue_flap@i_574^0,c
  1292   0078AA  EF89  F03C         	goto	l74
  1293   0078AE                     l75:
  1294                           
  1295                           ;main.c: 220:             PORTBbits.RB0 = 0;
  1296   0078AE  9081               	bcf	129,0,c	;volatile
  1297                           
  1298                           ;main.c: 221:             PORTBbits.RB1 = 0;
  1299   0078B0  9281               	bcf	129,1,c	;volatile
  1300                           
  1301                           ;main.c: 222:             PORTBbits.RB2 = 0;
  1302   0078B2  9481               	bcf	129,2,c	;volatile
  1303                           
  1304                           ;main.c: 223:             PORTBbits.RB3 = 1;
  1305   0078B4  8681               	bsf	129,3,c	;volatile
  1306   0078B6                     
  1307                           ;main.c: 224:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1308   0078B6  0E0B               	movlw	11
  1309   0078B8  6E36               	movwf	??_adjust_blue_flap^0,c
  1310   0078BA  0E62               	movlw	98
  1311   0078BC                     u1687:
  1312   0078BC  2EE8               	decfsz	wreg,f,c
  1313   0078BE  D7FE               	bra	u1687
  1314   0078C0  2E36               	decfsz	??_adjust_blue_flap^0,f,c
  1315   0078C2  D7FC               	bra	u1687
  1316   0078C4  D000               	nop2	
  1317   0078C6                     
  1318                           ;main.c: 225:             PORTBbits.RB0 = 0;
  1319   0078C6  9081               	bcf	129,0,c	;volatile
  1320   0078C8                     
  1321                           ;main.c: 226:             PORTBbits.RB1 = 0;
  1322   0078C8  9281               	bcf	129,1,c	;volatile
  1323   0078CA                     
  1324                           ;main.c: 227:             PORTBbits.RB2 = 1;
  1325   0078CA  8481               	bsf	129,2,c	;volatile
  1326   0078CC                     
  1327                           ;main.c: 228:             PORTBbits.RB3 = 0;
  1328   0078CC  9681               	bcf	129,3,c	;volatile
  1329                           
  1330                           ;main.c: 229:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1331   0078CE  0E0B               	movlw	11
  1332   0078D0  6E36               	movwf	??_adjust_blue_flap^0,c
  1333   0078D2  0E62               	movlw	98
  1334   0078D4                     u1697:
  1335   0078D4  2EE8               	decfsz	wreg,f,c
  1336   0078D6  D7FE               	bra	u1697
  1337   0078D8  2E36               	decfsz	??_adjust_blue_flap^0,f,c
  1338   0078DA  D7FC               	bra	u1697
  1339   0078DC  D000               	nop2	
  1340   0078DE                     
  1341                           ;main.c: 230:             PORTBbits.RB0 = 0;
  1342   0078DE  9081               	bcf	129,0,c	;volatile
  1343   0078E0                     
  1344                           ;main.c: 231:             PORTBbits.RB1 = 1;
  1345   0078E0  8281               	bsf	129,1,c	;volatile
  1346   0078E2                     
  1347                           ;main.c: 232:             PORTBbits.RB2 = 0;
  1348   0078E2  9481               	bcf	129,2,c	;volatile
  1349   0078E4                     
  1350                           ;main.c: 233:             PORTBbits.RB3 = 0;
  1351   0078E4  9681               	bcf	129,3,c	;volatile
  1352                           
  1353                           ;main.c: 234:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1354   0078E6  0E0B               	movlw	11
  1355   0078E8  6E36               	movwf	??_adjust_blue_flap^0,c
  1356   0078EA  0E62               	movlw	98
  1357   0078EC                     u1707:
  1358   0078EC  2EE8               	decfsz	wreg,f,c
  1359   0078EE  D7FE               	bra	u1707
  1360   0078F0  2E36               	decfsz	??_adjust_blue_flap^0,f,c
  1361   0078F2  D7FC               	bra	u1707
  1362   0078F4  D000               	nop2	
  1363   0078F6                     
  1364                           ;main.c: 235:             PORTBbits.RB0 = 1;
  1365   0078F6  8081               	bsf	129,0,c	;volatile
  1366   0078F8                     
  1367                           ;main.c: 236:             PORTBbits.RB1 = 0;
  1368   0078F8  9281               	bcf	129,1,c	;volatile
  1369   0078FA                     
  1370                           ;main.c: 237:             PORTBbits.RB2 = 0;
  1371   0078FA  9481               	bcf	129,2,c	;volatile
  1372   0078FC                     
  1373                           ;main.c: 238:             PORTBbits.RB3 = 0;
  1374   0078FC  9681               	bcf	129,3,c	;volatile
  1375                           
  1376                           ;main.c: 239:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1377   0078FE  0E0B               	movlw	11
  1378   007900  6E36               	movwf	??_adjust_blue_flap^0,c
  1379   007902  0E62               	movlw	98
  1380   007904                     u1717:
  1381   007904  2EE8               	decfsz	wreg,f,c
  1382   007906  D7FE               	bra	u1717
  1383   007908  2E36               	decfsz	??_adjust_blue_flap^0,f,c
  1384   00790A  D7FC               	bra	u1717
  1385   00790C  D000               	nop2	
  1386   00790E                     
  1387                           ;main.c: 240:         }
  1388   00790E  4A39               	infsnz	adjust_blue_flap@i_574^0,f,c
  1389   007910  2A3A               	incf	(adjust_blue_flap@i_574+1)^0,f,c
  1390   007912                     l74:
  1391   007912  503B               	movf	adjust_blue_flap@no_of_steps^0,w,c
  1392   007914  5C39               	subwf	adjust_blue_flap@i_574^0,w,c
  1393   007916  503C               	movf	(adjust_blue_flap@no_of_steps+1)^0,w,c
  1394   007918  583A               	subwfb	(adjust_blue_flap@i_574+1)^0,w,c
  1395   00791A  A0D8               	btfss	status,0,c
  1396   00791C  EF92  F03C         	goto	u1281
  1397   007920  EF94  F03C         	goto	u1280
  1398   007924                     u1281:
  1399   007924  EF57  F03C         	goto	l75
  1400   007928                     u1280:
  1401   007928                     l77:
  1402   007928  0012               	return		;funcret
  1403   00792A                     __end_of_adjust_blue_flap:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _sort_heavy_obj *****************
  1407 ;; Defined at:
  1408 ;;		line 315 in file "main.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  col             2   60[COMRAM] unsigned int 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1422 ;;      Params:         2       0       0       0       0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1424 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1425 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1426 ;;Total ram usage:        4 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 2
  1429 ;; This function calls:
  1430 ;;		_adjust_jaw
  1431 ;;		_msDelay
  1432 ;;		_toggle_conveyor
  1433 ;; This function is called by:
  1434 ;;		_take_action
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text5
  1439   0071C6                     __ptext5:
  1440                           	callstack 0
  1441   0071C6                     _sort_heavy_obj:
  1442                           	callstack 27
  1443   0071C6                     
  1444                           ;main.c: 316:     toggle_conveyor(1,0);
  1445   0071C6  0E00               	movlw	0
  1446   0071C8  6E02               	movwf	(toggle_conveyor@in_1+1)^0,c
  1447   0071CA  0E01               	movlw	1
  1448   0071CC  6E01               	movwf	toggle_conveyor@in_1^0,c
  1449   0071CE  0E00               	movlw	0
  1450   0071D0  6E04               	movwf	(toggle_conveyor@in_2+1)^0,c
  1451   0071D2  0E00               	movlw	0
  1452   0071D4  6E03               	movwf	toggle_conveyor@in_2^0,c
  1453   0071D6  EC0D  F038         	call	_toggle_conveyor	;wreg free
  1454   0071DA                     
  1455                           ;main.c: 317:     msDelay(52000);
  1456   0071DA  0ECB               	movlw	203
  1457   0071DC  6E02               	movwf	(msDelay@t+1)^0,c
  1458   0071DE  0E20               	movlw	32
  1459   0071E0  6E01               	movwf	msDelay@t^0,c
  1460   0071E2  EC37  F038         	call	_msDelay	;wreg free
  1461   0071E6                     
  1462                           ;main.c: 318:     if(col == 1) {
  1463   0071E6  043D               	decf	sort_heavy_obj@col^0,w,c
  1464   0071E8  103E               	iorwf	(sort_heavy_obj@col+1)^0,w,c
  1465   0071EA  A4D8               	btfss	status,2,c
  1466   0071EC  EFFA  F038         	goto	u1381
  1467   0071F0  EFFC  F038         	goto	u1380
  1468   0071F4                     u1381:
  1469   0071F4  EF13  F039         	goto	l1888
  1470   0071F8                     u1380:
  1471   0071F8                     
  1472                           ;main.c: 321:         adjust_jaw(120,0);
  1473   0071F8  0E00               	movlw	0
  1474   0071FA  6E33               	movwf	(adjust_jaw@degrees+1)^0,c
  1475   0071FC  0E78               	movlw	120
  1476   0071FE  6E32               	movwf	adjust_jaw@degrees^0,c
  1477   007200  0E00               	movlw	0
  1478   007202  6E35               	movwf	(adjust_jaw@direction+1)^0,c
  1479   007204  0E00               	movlw	0
  1480   007206  6E34               	movwf	adjust_jaw@direction^0,c
  1481   007208  EC0D  F03B         	call	_adjust_jaw	;wreg free
  1482   00720C                     l1886:
  1483                           
  1484                           ;main.c: 322:         _delay((unsigned long)((500)*(16000000/4000.0)));
  1485   00720C  0E0B               	movlw	11
  1486   00720E  6E40               	movwf	(??_sort_heavy_obj+1)^0,c
  1487   007210  0E26               	movlw	38
  1488   007212  6E3F               	movwf	??_sort_heavy_obj^0,c
  1489   007214  0E5E               	movlw	94
  1490   007216                     u1727:
  1491   007216  2EE8               	decfsz	wreg,f,c
  1492   007218  D7FE               	bra	u1727
  1493   00721A  2E3F               	decfsz	??_sort_heavy_obj^0,f,c
  1494   00721C  D7FC               	bra	u1727
  1495   00721E  2E40               	decfsz	(??_sort_heavy_obj+1)^0,f,c
  1496   007220  D7FA               	bra	u1727
  1497                           
  1498                           ;main.c: 323:     }
  1499   007222  EF29  F039         	goto	l101
  1500   007226                     l1888:
  1501   007226  0E02               	movlw	2
  1502   007228  183D               	xorwf	sort_heavy_obj@col^0,w,c
  1503   00722A  103E               	iorwf	(sort_heavy_obj@col+1)^0,w,c
  1504   00722C  A4D8               	btfss	status,2,c
  1505   00722E  EF1B  F039         	goto	u1391
  1506   007232  EF1D  F039         	goto	u1390
  1507   007236                     u1391:
  1508   007236  EF29  F039         	goto	l101
  1509   00723A                     u1390:
  1510   00723A                     
  1511                           ;main.c: 327:         adjust_jaw(120,1);
  1512   00723A  0E00               	movlw	0
  1513   00723C  6E33               	movwf	(adjust_jaw@degrees+1)^0,c
  1514   00723E  0E78               	movlw	120
  1515   007240  6E32               	movwf	adjust_jaw@degrees^0,c
  1516   007242  0E00               	movlw	0
  1517   007244  6E35               	movwf	(adjust_jaw@direction+1)^0,c
  1518   007246  0E01               	movlw	1
  1519   007248  6E34               	movwf	adjust_jaw@direction^0,c
  1520   00724A  EC0D  F03B         	call	_adjust_jaw	;wreg free
  1521   00724E  EF06  F039         	goto	l1886
  1522   007252                     l101:
  1523   007252  0012               	return		;funcret
  1524   007254                     __end_of_sort_heavy_obj:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _toggle_conveyor *****************
  1528 ;; Defined at:
  1529 ;;		line 101 in file "main.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  in_1            2    0[COMRAM] unsigned int 
  1532 ;;  in_2            2    2[COMRAM] unsigned int 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		None
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1544 ;;      Params:         4       0       0       0       0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1547 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1548 ;;Total ram usage:        4 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_sort_light_obj
  1554 ;;		_sort_heavy_obj
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text6
  1560   00701A                     __ptext6:
  1561                           	callstack 0
  1562   00701A                     _toggle_conveyor:
  1563                           	callstack 30
  1564   00701A                     
  1565                           ;main.c: 102:     PORTAbits.RA0 = (unsigned char)in_1;
  1566   00701A  B001               	btfsc	toggle_conveyor@in_1^0,0,c
  1567   00701C  D002               	bra	u1195
  1568   00701E  9080               	bcf	128,0,c	;volatile
  1569   007020  D001               	bra	u1196
  1570   007022                     u1195:
  1571   007022  8080               	bsf	128,0,c	;volatile
  1572   007024                     u1196:
  1573                           
  1574                           ;main.c: 103:     PORTAbits.RA1 = (unsigned char)in_2;
  1575   007024  B003               	btfsc	toggle_conveyor@in_2^0,0,c
  1576   007026  D002               	bra	u1205
  1577   007028  9280               	bcf	128,1,c	;volatile
  1578   00702A  D001               	bra	u1206
  1579   00702C                     u1205:
  1580   00702C  8280               	bsf	128,1,c	;volatile
  1581   00702E                     u1206:
  1582   00702E  0012               	return		;funcret
  1583   007030                     __end_of_toggle_conveyor:
  1584                           	callstack 0
  1585                           
  1586 ;; *************** function _msDelay *****************
  1587 ;; Defined at:
  1588 ;;		line 58 in file "main.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  t               2    0[COMRAM] unsigned int 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  i               2    4[COMRAM] unsigned int 
  1593 ;;  j               2    2[COMRAM] unsigned int 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1603 ;;      Params:         2       0       0       0       0       0       0       0       0
  1604 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1606 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1607 ;;Total ram usage:        6 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_sort_light_obj
  1613 ;;		_sort_heavy_obj
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text7
  1618   00706E                     __ptext7:
  1619                           	callstack 0
  1620   00706E                     _msDelay:
  1621                           	callstack 28
  1622   00706E                     
  1623                           ;main.c: 59:     unsigned int i, j;;main.c: 60:     for(i=0; i<710; i++){
  1624   00706E  0E00               	movlw	0
  1625   007070  6E06               	movwf	(msDelay@i+1)^0,c
  1626   007072  0E00               	movlw	0
  1627   007074  6E05               	movwf	msDelay@i^0,c
  1628   007076                     l1626:
  1629                           
  1630                           ;main.c: 61:         for(j=0; j<t; j++);
  1631   007076  0E00               	movlw	0
  1632   007078  6E04               	movwf	(msDelay@j+1)^0,c
  1633   00707A  0E00               	movlw	0
  1634   00707C  6E03               	movwf	msDelay@j^0,c
  1635   00707E  EF43  F038         	goto	l1630
  1636   007082                     l1628:
  1637   007082  4A03               	infsnz	msDelay@j^0,f,c
  1638   007084  2A04               	incf	(msDelay@j+1)^0,f,c
  1639   007086                     l1630:
  1640   007086  5001               	movf	msDelay@t^0,w,c
  1641   007088  5C03               	subwf	msDelay@j^0,w,c
  1642   00708A  5002               	movf	(msDelay@t+1)^0,w,c
  1643   00708C  5804               	subwfb	(msDelay@j+1)^0,w,c
  1644   00708E  A0D8               	btfss	status,0,c
  1645   007090  EF4C  F038         	goto	u1171
  1646   007094  EF4E  F038         	goto	u1170
  1647   007098                     u1171:
  1648   007098  EF41  F038         	goto	l1628
  1649   00709C                     u1170:
  1650   00709C                     
  1651                           ;main.c: 62:     }
  1652   00709C  4A05               	infsnz	msDelay@i^0,f,c
  1653   00709E  2A06               	incf	(msDelay@i+1)^0,f,c
  1654   0070A0  0EC6               	movlw	198
  1655   0070A2  5C05               	subwf	msDelay@i^0,w,c
  1656   0070A4  0E02               	movlw	2
  1657   0070A6  5806               	subwfb	(msDelay@i+1)^0,w,c
  1658   0070A8  A0D8               	btfss	status,0,c
  1659   0070AA  EF59  F038         	goto	u1181
  1660   0070AE  EF5B  F038         	goto	u1180
  1661   0070B2                     u1181:
  1662   0070B2  EF3B  F038         	goto	l1626
  1663   0070B6                     u1180:
  1664   0070B6  0012               	return		;funcret
  1665   0070B8                     __end_of_msDelay:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _adjust_jaw *****************
  1669 ;; Defined at:
  1670 ;;		line 243 in file "main.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  degrees         2   49[COMRAM] unsigned int 
  1673 ;;  direction       2   51[COMRAM] unsigned int 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  i               2   56[COMRAM] unsigned int 
  1676 ;;  i               2   54[COMRAM] unsigned int 
  1677 ;;  no_of_steps     2   58[COMRAM] unsigned int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:         4       0       0       0       0       0       0       0       0
  1688 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1689 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1690 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1691 ;;Total ram usage:       11 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 1
  1694 ;; This function calls:
  1695 ;;		___fldiv
  1696 ;;		___fltol
  1697 ;;		___xxtofl
  1698 ;; This function is called by:
  1699 ;;		_sort_heavy_obj
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text8
  1704   00761A                     __ptext8:
  1705                           	callstack 0
  1706   00761A                     _adjust_jaw:
  1707                           	callstack 27
  1708   00761A                     
  1709                           ;main.c: 245:     unsigned int no_of_steps = (unsigned int)(degrees / 5.625);
  1710   00761A  0E00               	movlw	0
  1711   00761C  6E13               	movwf	___fldiv@a^0,c
  1712   00761E  0E00               	movlw	0
  1713   007620  6E14               	movwf	(___fldiv@a+1)^0,c
  1714   007622  0EB4               	movlw	180
  1715   007624  6E15               	movwf	(___fldiv@a+2)^0,c
  1716   007626  0E40               	movlw	64
  1717   007628  6E16               	movwf	(___fldiv@a+3)^0,c
  1718   00762A  C032  F001         	movff	adjust_jaw@degrees,___xxtofl@val
  1719   00762E  C033  F002         	movff	adjust_jaw@degrees+1,___xxtofl@val+1
  1720   007632  6A03               	clrf	(___xxtofl@val+2)^0,c
  1721   007634  6A04               	clrf	(___xxtofl@val+3)^0,c
  1722   007636  0E00               	movlw	0
  1723   007638  EC59  F03D         	call	___xxtofl
  1724   00763C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1725   007640  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1726   007644  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1727   007648  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1728   00764C  EC33  F03E         	call	___fldiv	;wreg free
  1729   007650  C00F  F028         	movff	?___fldiv,___fltol@f1
  1730   007654  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  1731   007658  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  1732   00765C  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  1733   007660  ECF5  F039         	call	___fltol	;wreg free
  1734   007664  C028  F03B         	movff	?___fltol,adjust_jaw@no_of_steps
  1735   007668  C029  F03C         	movff	?___fltol+1,adjust_jaw@no_of_steps+1
  1736   00766C                     
  1737                           ;main.c: 246:     if(direction == 0) {
  1738   00766C  5034               	movf	adjust_jaw@direction^0,w,c
  1739   00766E  1035               	iorwf	(adjust_jaw@direction+1)^0,w,c
  1740   007670  A4D8               	btfss	status,2,c
  1741   007672  EF3D  F03B         	goto	u1291
  1742   007676  EF3F  F03B         	goto	u1290
  1743   00767A                     u1291:
  1744   00767A  EF84  F03B         	goto	l1804
  1745   00767E                     u1290:
  1746   00767E                     
  1747                           ;main.c: 247:         for(unsigned int i=0; i<no_of_steps; i++) {
  1748   00767E  0E00               	movlw	0
  1749   007680  6E38               	movwf	(adjust_jaw@i+1)^0,c
  1750   007682  0E00               	movlw	0
  1751   007684  6E37               	movwf	adjust_jaw@i^0,c
  1752   007686  EF77  F03B         	goto	l81
  1753   00768A                     l82:
  1754                           
  1755                           ;main.c: 248:             PORTBbits.RB4 = 1;
  1756   00768A  8881               	bsf	129,4,c	;volatile
  1757                           
  1758                           ;main.c: 249:             PORTBbits.RB5 = 0;
  1759   00768C  9A81               	bcf	129,5,c	;volatile
  1760                           
  1761                           ;main.c: 250:             PORTBbits.RB6 = 0;
  1762   00768E  9C81               	bcf	129,6,c	;volatile
  1763                           
  1764                           ;main.c: 251:             PORTBbits.RB7 = 0;
  1765   007690  9E81               	bcf	129,7,c	;volatile
  1766   007692                     
  1767                           ;main.c: 252:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1768   007692  0E0B               	movlw	11
  1769   007694  6E36               	movwf	??_adjust_jaw^0,c
  1770   007696  0E62               	movlw	98
  1771   007698                     u1737:
  1772   007698  2EE8               	decfsz	wreg,f,c
  1773   00769A  D7FE               	bra	u1737
  1774   00769C  2E36               	decfsz	??_adjust_jaw^0,f,c
  1775   00769E  D7FC               	bra	u1737
  1776   0076A0  D000               	nop2	
  1777   0076A2                     
  1778                           ;main.c: 253:             PORTBbits.RB4 = 0;
  1779   0076A2  9881               	bcf	129,4,c	;volatile
  1780   0076A4                     
  1781                           ;main.c: 254:             PORTBbits.RB5 = 1;
  1782   0076A4  8A81               	bsf	129,5,c	;volatile
  1783   0076A6                     
  1784                           ;main.c: 255:             PORTBbits.RB6 = 0;
  1785   0076A6  9C81               	bcf	129,6,c	;volatile
  1786   0076A8                     
  1787                           ;main.c: 256:             PORTBbits.RB7 = 0;
  1788   0076A8  9E81               	bcf	129,7,c	;volatile
  1789                           
  1790                           ;main.c: 257:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1791   0076AA  0E0B               	movlw	11
  1792   0076AC  6E36               	movwf	??_adjust_jaw^0,c
  1793   0076AE  0E62               	movlw	98
  1794   0076B0                     u1747:
  1795   0076B0  2EE8               	decfsz	wreg,f,c
  1796   0076B2  D7FE               	bra	u1747
  1797   0076B4  2E36               	decfsz	??_adjust_jaw^0,f,c
  1798   0076B6  D7FC               	bra	u1747
  1799   0076B8  D000               	nop2	
  1800   0076BA                     
  1801                           ;main.c: 258:             PORTBbits.RB4 = 0;
  1802   0076BA  9881               	bcf	129,4,c	;volatile
  1803   0076BC                     
  1804                           ;main.c: 259:             PORTBbits.RB5 = 0;
  1805   0076BC  9A81               	bcf	129,5,c	;volatile
  1806   0076BE                     
  1807                           ;main.c: 260:             PORTBbits.RB6 = 1;
  1808   0076BE  8C81               	bsf	129,6,c	;volatile
  1809   0076C0                     
  1810                           ;main.c: 261:             PORTBbits.RB7 = 0;
  1811   0076C0  9E81               	bcf	129,7,c	;volatile
  1812                           
  1813                           ;main.c: 262:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1814   0076C2  0E0B               	movlw	11
  1815   0076C4  6E36               	movwf	??_adjust_jaw^0,c
  1816   0076C6  0E62               	movlw	98
  1817   0076C8                     u1757:
  1818   0076C8  2EE8               	decfsz	wreg,f,c
  1819   0076CA  D7FE               	bra	u1757
  1820   0076CC  2E36               	decfsz	??_adjust_jaw^0,f,c
  1821   0076CE  D7FC               	bra	u1757
  1822   0076D0  D000               	nop2	
  1823   0076D2                     
  1824                           ;main.c: 263:             PORTBbits.RB4 = 0;
  1825   0076D2  9881               	bcf	129,4,c	;volatile
  1826   0076D4                     
  1827                           ;main.c: 264:             PORTBbits.RB5 = 0;
  1828   0076D4  9A81               	bcf	129,5,c	;volatile
  1829   0076D6                     
  1830                           ;main.c: 265:             PORTBbits.RB6 = 0;
  1831   0076D6  9C81               	bcf	129,6,c	;volatile
  1832   0076D8                     
  1833                           ;main.c: 266:             PORTBbits.RB7 = 1;
  1834   0076D8  8E81               	bsf	129,7,c	;volatile
  1835                           
  1836                           ;main.c: 267:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1837   0076DA  0E0B               	movlw	11
  1838   0076DC  6E36               	movwf	??_adjust_jaw^0,c
  1839   0076DE  0E62               	movlw	98
  1840   0076E0                     u1767:
  1841   0076E0  2EE8               	decfsz	wreg,f,c
  1842   0076E2  D7FE               	bra	u1767
  1843   0076E4  2E36               	decfsz	??_adjust_jaw^0,f,c
  1844   0076E6  D7FC               	bra	u1767
  1845   0076E8  D000               	nop2	
  1846   0076EA                     
  1847                           ;main.c: 268:         }
  1848   0076EA  4A37               	infsnz	adjust_jaw@i^0,f,c
  1849   0076EC  2A38               	incf	(adjust_jaw@i+1)^0,f,c
  1850   0076EE                     l81:
  1851   0076EE  503B               	movf	adjust_jaw@no_of_steps^0,w,c
  1852   0076F0  5C37               	subwf	adjust_jaw@i^0,w,c
  1853   0076F2  503C               	movf	(adjust_jaw@no_of_steps+1)^0,w,c
  1854   0076F4  5838               	subwfb	(adjust_jaw@i+1)^0,w,c
  1855   0076F6  A0D8               	btfss	status,0,c
  1856   0076F8  EF80  F03B         	goto	u1301
  1857   0076FC  EF82  F03B         	goto	u1300
  1858   007700                     u1301:
  1859   007700  EF45  F03B         	goto	l82
  1860   007704                     u1300:
  1861   007704  EFD0  F03B         	goto	l89
  1862   007708                     l1804:
  1863   007708  0434               	decf	adjust_jaw@direction^0,w,c
  1864   00770A  1035               	iorwf	(adjust_jaw@direction+1)^0,w,c
  1865   00770C  A4D8               	btfss	status,2,c
  1866   00770E  EF8B  F03B         	goto	u1311
  1867   007712  EF8D  F03B         	goto	u1310
  1868   007716                     u1311:
  1869   007716  EFD0  F03B         	goto	l89
  1870   00771A                     u1310:
  1871   00771A                     
  1872                           ;main.c: 271:         for(unsigned int i=0; i<no_of_steps; i++) {
  1873   00771A  0E00               	movlw	0
  1874   00771C  6E3A               	movwf	(adjust_jaw@i_580+1)^0,c
  1875   00771E  0E00               	movlw	0
  1876   007720  6E39               	movwf	adjust_jaw@i_580^0,c
  1877   007722  EFC5  F03B         	goto	l86
  1878   007726                     l87:
  1879                           
  1880                           ;main.c: 272:             PORTBbits.RB4 = 0;
  1881   007726  9881               	bcf	129,4,c	;volatile
  1882                           
  1883                           ;main.c: 273:             PORTBbits.RB5 = 0;
  1884   007728  9A81               	bcf	129,5,c	;volatile
  1885                           
  1886                           ;main.c: 274:             PORTBbits.RB6 = 0;
  1887   00772A  9C81               	bcf	129,6,c	;volatile
  1888                           
  1889                           ;main.c: 275:             PORTBbits.RB7 = 1;
  1890   00772C  8E81               	bsf	129,7,c	;volatile
  1891   00772E                     
  1892                           ;main.c: 276:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1893   00772E  0E0B               	movlw	11
  1894   007730  6E36               	movwf	??_adjust_jaw^0,c
  1895   007732  0E62               	movlw	98
  1896   007734                     u1777:
  1897   007734  2EE8               	decfsz	wreg,f,c
  1898   007736  D7FE               	bra	u1777
  1899   007738  2E36               	decfsz	??_adjust_jaw^0,f,c
  1900   00773A  D7FC               	bra	u1777
  1901   00773C  D000               	nop2	
  1902   00773E                     
  1903                           ;main.c: 277:             PORTBbits.RB4 = 0;
  1904   00773E  9881               	bcf	129,4,c	;volatile
  1905   007740                     
  1906                           ;main.c: 278:             PORTBbits.RB5 = 0;
  1907   007740  9A81               	bcf	129,5,c	;volatile
  1908   007742                     
  1909                           ;main.c: 279:             PORTBbits.RB6 = 1;
  1910   007742  8C81               	bsf	129,6,c	;volatile
  1911   007744                     
  1912                           ;main.c: 280:             PORTBbits.RB7 = 0;
  1913   007744  9E81               	bcf	129,7,c	;volatile
  1914                           
  1915                           ;main.c: 281:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1916   007746  0E0B               	movlw	11
  1917   007748  6E36               	movwf	??_adjust_jaw^0,c
  1918   00774A  0E62               	movlw	98
  1919   00774C                     u1787:
  1920   00774C  2EE8               	decfsz	wreg,f,c
  1921   00774E  D7FE               	bra	u1787
  1922   007750  2E36               	decfsz	??_adjust_jaw^0,f,c
  1923   007752  D7FC               	bra	u1787
  1924   007754  D000               	nop2	
  1925   007756                     
  1926                           ;main.c: 282:             PORTBbits.RB4 = 0;
  1927   007756  9881               	bcf	129,4,c	;volatile
  1928   007758                     
  1929                           ;main.c: 283:             PORTBbits.RB5 = 1;
  1930   007758  8A81               	bsf	129,5,c	;volatile
  1931   00775A                     
  1932                           ;main.c: 284:             PORTBbits.RB6 = 0;
  1933   00775A  9C81               	bcf	129,6,c	;volatile
  1934   00775C                     
  1935                           ;main.c: 285:             PORTBbits.RB7 = 0;
  1936   00775C  9E81               	bcf	129,7,c	;volatile
  1937                           
  1938                           ;main.c: 286:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1939   00775E  0E0B               	movlw	11
  1940   007760  6E36               	movwf	??_adjust_jaw^0,c
  1941   007762  0E62               	movlw	98
  1942   007764                     u1797:
  1943   007764  2EE8               	decfsz	wreg,f,c
  1944   007766  D7FE               	bra	u1797
  1945   007768  2E36               	decfsz	??_adjust_jaw^0,f,c
  1946   00776A  D7FC               	bra	u1797
  1947   00776C  D000               	nop2	
  1948   00776E                     
  1949                           ;main.c: 287:             PORTBbits.RB4 = 1;
  1950   00776E  8881               	bsf	129,4,c	;volatile
  1951   007770                     
  1952                           ;main.c: 288:             PORTBbits.RB5 = 0;
  1953   007770  9A81               	bcf	129,5,c	;volatile
  1954   007772                     
  1955                           ;main.c: 289:             PORTBbits.RB6 = 0;
  1956   007772  9C81               	bcf	129,6,c	;volatile
  1957   007774                     
  1958                           ;main.c: 290:             PORTBbits.RB7 = 0;
  1959   007774  9E81               	bcf	129,7,c	;volatile
  1960                           
  1961                           ;main.c: 291:             _delay((unsigned long)((2)*(16000000/4000.0)));
  1962   007776  0E0B               	movlw	11
  1963   007778  6E36               	movwf	??_adjust_jaw^0,c
  1964   00777A  0E62               	movlw	98
  1965   00777C                     u1807:
  1966   00777C  2EE8               	decfsz	wreg,f,c
  1967   00777E  D7FE               	bra	u1807
  1968   007780  2E36               	decfsz	??_adjust_jaw^0,f,c
  1969   007782  D7FC               	bra	u1807
  1970   007784  D000               	nop2	
  1971   007786                     
  1972                           ;main.c: 292:         }
  1973   007786  4A39               	infsnz	adjust_jaw@i_580^0,f,c
  1974   007788  2A3A               	incf	(adjust_jaw@i_580+1)^0,f,c
  1975   00778A                     l86:
  1976   00778A  503B               	movf	adjust_jaw@no_of_steps^0,w,c
  1977   00778C  5C39               	subwf	adjust_jaw@i_580^0,w,c
  1978   00778E  503C               	movf	(adjust_jaw@no_of_steps+1)^0,w,c
  1979   007790  583A               	subwfb	(adjust_jaw@i_580+1)^0,w,c
  1980   007792  A0D8               	btfss	status,0,c
  1981   007794  EFCE  F03B         	goto	u1321
  1982   007798  EFD0  F03B         	goto	u1320
  1983   00779C                     u1321:
  1984   00779C  EF93  F03B         	goto	l87
  1985   0077A0                     u1320:
  1986   0077A0                     l89:
  1987   0077A0  0012               	return		;funcret
  1988   0077A2                     __end_of_adjust_jaw:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function ___xxtofl *****************
  1992 ;; Defined at:
  1993 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  sign            1    wreg     unsigned char 
  1996 ;;  val             4    0[COMRAM] long 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  sign            1    8[COMRAM] unsigned char 
  1999 ;;  arg             4   10[COMRAM] unsigned long 
  2000 ;;  exp             1    9[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  4    0[COMRAM] unsigned char 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2010 ;;      Params:         4       0       0       0       0       0       0       0       0
  2011 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2012 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2013 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2014 ;;Total ram usage:       14 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_adjust_red_flap
  2020 ;;		_adjust_blue_flap
  2021 ;;		_adjust_jaw
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text9
  2026   007AB2                     __ptext9:
  2027                           	callstack 0
  2028   007AB2                     ___xxtofl:
  2029                           	callstack 27
  2030                           
  2031                           ;incstack = 0
  2032                           ;___xxtofl@sign stored from wreg
  2033   007AB2  6E09               	movwf	___xxtofl@sign^0,c
  2034   007AB4  5009               	movf	___xxtofl@sign^0,w,c
  2035   007AB6  B4D8               	btfsc	status,2,c
  2036   007AB8  EF60  F03D         	goto	u1071
  2037   007ABC  EF62  F03D         	goto	u1070
  2038   007AC0                     u1071:
  2039   007AC0  EF84  F03D         	goto	l780
  2040   007AC4                     u1070:
  2041   007AC4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2042   007AC6  EF69  F03D         	goto	u1080
  2043   007ACA  EF67  F03D         	goto	u1081
  2044   007ACE                     u1081:
  2045   007ACE  EF84  F03D         	goto	l780
  2046   007AD2                     u1080:
  2047   007AD2  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2048   007AD6  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2049   007ADA  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2050   007ADE  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2051   007AE2  1E05               	comf	??___xxtofl^0,f,c
  2052   007AE4  1E06               	comf	(??___xxtofl+1)^0,f,c
  2053   007AE6  1E07               	comf	(??___xxtofl+2)^0,f,c
  2054   007AE8  1E08               	comf	(??___xxtofl+3)^0,f,c
  2055   007AEA  2A05               	incf	??___xxtofl^0,f,c
  2056   007AEC  0E00               	movlw	0
  2057   007AEE  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2058   007AF0  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2059   007AF2  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2060   007AF4  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2061   007AF8  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2062   007AFC  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2063   007B00  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2064   007B04  EF8C  F03D         	goto	l1580
  2065   007B08                     l780:
  2066   007B08  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2067   007B0C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2068   007B10  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2069   007B14  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2070   007B18                     l1580:
  2071   007B18  5001               	movf	___xxtofl@val^0,w,c
  2072   007B1A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2073   007B1C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2074   007B1E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2075   007B20  A4D8               	btfss	status,2,c
  2076   007B22  EF95  F03D         	goto	u1091
  2077   007B26  EF97  F03D         	goto	u1090
  2078   007B2A                     u1091:
  2079   007B2A  EFA1  F03D         	goto	l1586
  2080   007B2E                     u1090:
  2081   007B2E  0E00               	movlw	0
  2082   007B30  6E01               	movwf	?___xxtofl^0,c
  2083   007B32  0E00               	movlw	0
  2084   007B34  6E02               	movwf	(?___xxtofl+1)^0,c
  2085   007B36  0E00               	movlw	0
  2086   007B38  6E03               	movwf	(?___xxtofl+2)^0,c
  2087   007B3A  0E00               	movlw	0
  2088   007B3C  6E04               	movwf	(?___xxtofl+3)^0,c
  2089   007B3E  EF32  F03E         	goto	l783
  2090   007B42                     l1586:
  2091   007B42  0E96               	movlw	150
  2092   007B44  6E0A               	movwf	___xxtofl@exp^0,c
  2093   007B46  EFAB  F03D         	goto	l1590
  2094   007B4A                     l1588:
  2095   007B4A  2A0A               	incf	___xxtofl@exp^0,f,c
  2096   007B4C  90D8               	bcf	status,0,c
  2097   007B4E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2098   007B50  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2099   007B52  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2100   007B54  320B               	rrcf	___xxtofl@arg^0,f,c
  2101   007B56                     l1590:
  2102   007B56  0E00               	movlw	0
  2103   007B58  140B               	andwf	___xxtofl@arg^0,w,c
  2104   007B5A  6E05               	movwf	??___xxtofl^0,c
  2105   007B5C  0E00               	movlw	0
  2106   007B5E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2107   007B60  6E06               	movwf	(??___xxtofl+1)^0,c
  2108   007B62  0E00               	movlw	0
  2109   007B64  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2110   007B66  6E07               	movwf	(??___xxtofl+2)^0,c
  2111   007B68  0EFE               	movlw	254
  2112   007B6A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2113   007B6C  6E08               	movwf	(??___xxtofl+3)^0,c
  2114   007B6E  5005               	movf	??___xxtofl^0,w,c
  2115   007B70  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2116   007B72  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2117   007B74  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2118   007B76  A4D8               	btfss	status,2,c
  2119   007B78  EFC0  F03D         	goto	u1101
  2120   007B7C  EFC2  F03D         	goto	u1100
  2121   007B80                     u1101:
  2122   007B80  EFA5  F03D         	goto	l1588
  2123   007B84                     u1100:
  2124   007B84  EFD0  F03D         	goto	l787
  2125   007B88                     l1592:
  2126   007B88  2A0A               	incf	___xxtofl@exp^0,f,c
  2127   007B8A  0E01               	movlw	1
  2128   007B8C  260B               	addwf	___xxtofl@arg^0,f,c
  2129   007B8E  0E00               	movlw	0
  2130   007B90  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2131   007B92  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2132   007B94  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2133   007B96  90D8               	bcf	status,0,c
  2134   007B98  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2135   007B9A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2136   007B9C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2137   007B9E  320B               	rrcf	___xxtofl@arg^0,f,c
  2138   007BA0                     l787:
  2139   007BA0  0E00               	movlw	0
  2140   007BA2  140B               	andwf	___xxtofl@arg^0,w,c
  2141   007BA4  6E05               	movwf	??___xxtofl^0,c
  2142   007BA6  0E00               	movlw	0
  2143   007BA8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2144   007BAA  6E06               	movwf	(??___xxtofl+1)^0,c
  2145   007BAC  0E00               	movlw	0
  2146   007BAE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2147   007BB0  6E07               	movwf	(??___xxtofl+2)^0,c
  2148   007BB2  0EFF               	movlw	255
  2149   007BB4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2150   007BB6  6E08               	movwf	(??___xxtofl+3)^0,c
  2151   007BB8  5005               	movf	??___xxtofl^0,w,c
  2152   007BBA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2153   007BBC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2154   007BBE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2155   007BC0  A4D8               	btfss	status,2,c
  2156   007BC2  EFE5  F03D         	goto	u1111
  2157   007BC6  EFE7  F03D         	goto	u1110
  2158   007BCA                     u1111:
  2159   007BCA  EFC4  F03D         	goto	l1592
  2160   007BCE                     u1110:
  2161   007BCE  EFEF  F03D         	goto	l1600
  2162   007BD2                     l1598:
  2163   007BD2  060A               	decf	___xxtofl@exp^0,f,c
  2164   007BD4  90D8               	bcf	status,0,c
  2165   007BD6  360B               	rlcf	___xxtofl@arg^0,f,c
  2166   007BD8  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2167   007BDA  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2168   007BDC  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2169   007BDE                     l1600:
  2170   007BDE  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2171   007BE0  EFF4  F03D         	goto	u1121
  2172   007BE4  EFF6  F03D         	goto	u1120
  2173   007BE8                     u1121:
  2174   007BE8  EFFE  F03D         	goto	l794
  2175   007BEC                     u1120:
  2176   007BEC  0E02               	movlw	2
  2177   007BEE  600A               	cpfslt	___xxtofl@exp^0,c
  2178   007BF0  EFFC  F03D         	goto	u1131
  2179   007BF4  EFFE  F03D         	goto	u1130
  2180   007BF8                     u1131:
  2181   007BF8  EFE9  F03D         	goto	l1598
  2182   007BFC                     u1130:
  2183   007BFC                     l794:
  2184   007BFC  B00A               	btfsc	___xxtofl@exp^0,0,c
  2185   007BFE  EF03  F03E         	goto	u1141
  2186   007C02  EF05  F03E         	goto	u1140
  2187   007C06                     u1141:
  2188   007C06  EF06  F03E         	goto	l1606
  2189   007C0A                     u1140:
  2190   007C0A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2191   007C0C                     l1606:
  2192   007C0C  90D8               	bcf	status,0,c
  2193   007C0E  320A               	rrcf	___xxtofl@exp^0,f,c
  2194   007C10  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2195   007C14  6A06               	clrf	(??___xxtofl+1)^0,c
  2196   007C16  6A07               	clrf	(??___xxtofl+2)^0,c
  2197   007C18  6A08               	clrf	(??___xxtofl+3)^0,c
  2198   007C1A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2199   007C1E  6A07               	clrf	(??___xxtofl+2)^0,c
  2200   007C20  6A06               	clrf	(??___xxtofl+1)^0,c
  2201   007C22  6A05               	clrf	??___xxtofl^0,c
  2202   007C24  5005               	movf	??___xxtofl^0,w,c
  2203   007C26  120B               	iorwf	___xxtofl@arg^0,f,c
  2204   007C28  5006               	movf	(??___xxtofl+1)^0,w,c
  2205   007C2A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2206   007C2C  5007               	movf	(??___xxtofl+2)^0,w,c
  2207   007C2E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2208   007C30  5008               	movf	(??___xxtofl+3)^0,w,c
  2209   007C32  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2210   007C34  5009               	movf	___xxtofl@sign^0,w,c
  2211   007C36  B4D8               	btfsc	status,2,c
  2212   007C38  EF20  F03E         	goto	u1151
  2213   007C3C  EF22  F03E         	goto	u1150
  2214   007C40                     u1151:
  2215   007C40  EF2A  F03E         	goto	l1616
  2216   007C44                     u1150:
  2217   007C44  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2218   007C46  EF29  F03E         	goto	u1160
  2219   007C4A  EF27  F03E         	goto	u1161
  2220   007C4E                     u1161:
  2221   007C4E  EF2A  F03E         	goto	l1616
  2222   007C52                     u1160:
  2223   007C52  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2224   007C54                     l1616:
  2225   007C54  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2226   007C58  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2227   007C5C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2228   007C60  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2229   007C64                     l783:
  2230   007C64  0012               	return		;funcret
  2231   007C66                     __end_of___xxtofl:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function ___fltol *****************
  2235 ;; Defined at:
  2236 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  f1              4   39[COMRAM] unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  exp1            1   48[COMRAM] unsigned char 
  2241 ;;  sign1           1   47[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  4   39[COMRAM] long 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2251 ;;      Params:         4       0       0       0       0       0       0       0       0
  2252 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2253 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2254 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2255 ;;Total ram usage:       10 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_adjust_red_flap
  2261 ;;		_adjust_blue_flap
  2262 ;;		_adjust_jaw
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text10
  2267   0073EA                     __ptext10:
  2268                           	callstack 0
  2269   0073EA                     ___fltol:
  2270                           	callstack 27
  2271   0073EA  342A               	rlcf	(___fltol@f1+2)^0,w,c
  2272   0073EC  342B               	rlcf	(___fltol@f1+3)^0,w,c
  2273   0073EE  6E31               	movwf	___fltol@exp1^0,c
  2274   0073F0  5031               	movf	___fltol@exp1^0,w,c
  2275   0073F2  A4D8               	btfss	status,2,c
  2276   0073F4  EFFE  F039         	goto	u1001
  2277   0073F8  EF00  F03A         	goto	u1000
  2278   0073FC                     u1001:
  2279   0073FC  EF0A  F03A         	goto	l1536
  2280   007400                     u1000:
  2281   007400                     l1532:
  2282   007400  0E00               	movlw	0
  2283   007402  6E28               	movwf	?___fltol^0,c
  2284   007404  0E00               	movlw	0
  2285   007406  6E29               	movwf	(?___fltol+1)^0,c
  2286   007408  0E00               	movlw	0
  2287   00740A  6E2A               	movwf	(?___fltol+2)^0,c
  2288   00740C  0E00               	movlw	0
  2289   00740E  6E2B               	movwf	(?___fltol+3)^0,c
  2290   007410  EF77  F03A         	goto	l422
  2291   007414                     l1536:
  2292   007414  C028  F02C         	movff	___fltol@f1,??___fltol
  2293   007418  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  2294   00741C  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  2295   007420  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  2296   007424  0E20               	movlw	32
  2297   007426  EF1A  F03A         	goto	u1010
  2298   00742A                     u1015:
  2299   00742A  90D8               	bcf	status,0,c
  2300   00742C  322F               	rrcf	(??___fltol+3)^0,f,c
  2301   00742E  322E               	rrcf	(??___fltol+2)^0,f,c
  2302   007430  322D               	rrcf	(??___fltol+1)^0,f,c
  2303   007432  322C               	rrcf	??___fltol^0,f,c
  2304   007434                     u1010:
  2305   007434  2EE8               	decfsz	wreg,f,c
  2306   007436  EF15  F03A         	goto	u1015
  2307   00743A  502C               	movf	??___fltol^0,w,c
  2308   00743C  6E30               	movwf	___fltol@sign1^0,c
  2309   00743E  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  2310   007440  0EFF               	movlw	255
  2311   007442  1628               	andwf	___fltol@f1^0,f,c
  2312   007444  0EFF               	movlw	255
  2313   007446  1629               	andwf	(___fltol@f1+1)^0,f,c
  2314   007448  0EFF               	movlw	255
  2315   00744A  162A               	andwf	(___fltol@f1+2)^0,f,c
  2316   00744C  0E00               	movlw	0
  2317   00744E  162B               	andwf	(___fltol@f1+3)^0,f,c
  2318   007450  0E96               	movlw	150
  2319   007452  5E31               	subwf	___fltol@exp1^0,f,c
  2320   007454  BE31               	btfsc	___fltol@exp1^0,7,c
  2321   007456  EF31  F03A         	goto	u1020
  2322   00745A  EF2F  F03A         	goto	u1021
  2323   00745E                     u1021:
  2324   00745E  EF47  F03A         	goto	l1556
  2325   007462                     u1020:
  2326   007462  5031               	movf	___fltol@exp1^0,w,c
  2327   007464  0A80               	xorlw	128
  2328   007466  0F97               	addlw	151
  2329   007468  B0D8               	btfsc	status,0,c
  2330   00746A  EF39  F03A         	goto	u1031
  2331   00746E  EF3B  F03A         	goto	u1030
  2332   007472                     u1031:
  2333   007472  EF3D  F03A         	goto	l1552
  2334   007476                     u1030:
  2335   007476  EF00  F03A         	goto	l1532
  2336   00747A                     l1552:
  2337   00747A  90D8               	bcf	status,0,c
  2338   00747C  322B               	rrcf	(___fltol@f1+3)^0,f,c
  2339   00747E  322A               	rrcf	(___fltol@f1+2)^0,f,c
  2340   007480  3229               	rrcf	(___fltol@f1+1)^0,f,c
  2341   007482  3228               	rrcf	___fltol@f1^0,f,c
  2342   007484  3E31               	incfsz	___fltol@exp1^0,f,c
  2343   007486  EF3D  F03A         	goto	l1552
  2344   00748A  EF5F  F03A         	goto	l1566
  2345   00748E                     l1556:
  2346   00748E  0E1F               	movlw	31
  2347   007490  6431               	cpfsgt	___fltol@exp1^0,c
  2348   007492  EF4D  F03A         	goto	u1041
  2349   007496  EF4F  F03A         	goto	u1040
  2350   00749A                     u1041:
  2351   00749A  EF57  F03A         	goto	l1564
  2352   00749E                     u1040:
  2353   00749E  EF00  F03A         	goto	l1532
  2354   0074A2                     l1562:
  2355   0074A2  90D8               	bcf	status,0,c
  2356   0074A4  3628               	rlcf	___fltol@f1^0,f,c
  2357   0074A6  3629               	rlcf	(___fltol@f1+1)^0,f,c
  2358   0074A8  362A               	rlcf	(___fltol@f1+2)^0,f,c
  2359   0074AA  362B               	rlcf	(___fltol@f1+3)^0,f,c
  2360   0074AC  0631               	decf	___fltol@exp1^0,f,c
  2361   0074AE                     l1564:
  2362   0074AE  5031               	movf	___fltol@exp1^0,w,c
  2363   0074B0  A4D8               	btfss	status,2,c
  2364   0074B2  EF5D  F03A         	goto	u1051
  2365   0074B6  EF5F  F03A         	goto	u1050
  2366   0074BA                     u1051:
  2367   0074BA  EF51  F03A         	goto	l1562
  2368   0074BE                     u1050:
  2369   0074BE                     l1566:
  2370   0074BE  5030               	movf	___fltol@sign1^0,w,c
  2371   0074C0  B4D8               	btfsc	status,2,c
  2372   0074C2  EF65  F03A         	goto	u1061
  2373   0074C6  EF67  F03A         	goto	u1060
  2374   0074CA                     u1061:
  2375   0074CA  EF6F  F03A         	goto	l1570
  2376   0074CE                     u1060:
  2377   0074CE  1E2B               	comf	(___fltol@f1+3)^0,f,c
  2378   0074D0  1E2A               	comf	(___fltol@f1+2)^0,f,c
  2379   0074D2  1E29               	comf	(___fltol@f1+1)^0,f,c
  2380   0074D4  6C28               	negf	___fltol@f1^0,c
  2381   0074D6  0E00               	movlw	0
  2382   0074D8  2229               	addwfc	(___fltol@f1+1)^0,f,c
  2383   0074DA  222A               	addwfc	(___fltol@f1+2)^0,f,c
  2384   0074DC  222B               	addwfc	(___fltol@f1+3)^0,f,c
  2385   0074DE                     l1570:
  2386   0074DE  C028  F028         	movff	___fltol@f1,?___fltol
  2387   0074E2  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  2388   0074E6  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  2389   0074EA  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  2390   0074EE                     l422:
  2391   0074EE  0012               	return		;funcret
  2392   0074F0                     __end_of___fltol:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function ___fldiv *****************
  2396 ;; Defined at:
  2397 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  b               4   14[COMRAM] long 
  2400 ;;  a               4   18[COMRAM] long 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  grs             4   33[COMRAM] unsigned long 
  2403 ;;  rem             4   26[COMRAM] unsigned long 
  2404 ;;  new_exp         2   31[COMRAM] short 
  2405 ;;  aexp            1   38[COMRAM] unsigned char 
  2406 ;;  bexp            1   37[COMRAM] unsigned char 
  2407 ;;  sign            1   30[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  4   14[COMRAM] unsigned char 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2417 ;;      Params:         8       0       0       0       0       0       0       0       0
  2418 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2419 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2420 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2421 ;;Total ram usage:       25 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_adjust_red_flap
  2427 ;;		_adjust_blue_flap
  2428 ;;		_adjust_jaw
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text11
  2433   007C66                     __ptext11:
  2434                           	callstack 0
  2435   007C66                     ___fldiv:
  2436                           	callstack 27
  2437   007C66  5012               	movf	(___fldiv@b+3)^0,w,c
  2438   007C68  0B80               	andlw	128
  2439   007C6A  6E1F               	movwf	___fldiv@sign^0,c
  2440   007C6C  5012               	movf	(___fldiv@b+3)^0,w,c
  2441   007C6E  2412               	addwf	(___fldiv@b+3)^0,w,c
  2442   007C70  6E26               	movwf	___fldiv@bexp^0,c
  2443   007C72  AE11               	btfss	(___fldiv@b+2)^0,7,c
  2444   007C74  EF3E  F03E         	goto	u771
  2445   007C78  EF40  F03E         	goto	u770
  2446   007C7C                     u771:
  2447   007C7C  EF41  F03E         	goto	l1398
  2448   007C80                     u770:
  2449   007C80  8026               	bsf	___fldiv@bexp^0,0,c
  2450   007C82                     l1398:
  2451   007C82  5026               	movf	___fldiv@bexp^0,w,c
  2452   007C84  B4D8               	btfsc	status,2,c
  2453   007C86  EF47  F03E         	goto	u781
  2454   007C8A  EF49  F03E         	goto	u780
  2455   007C8E                     u781:
  2456   007C8E  EF5E  F03E         	goto	l1408
  2457   007C92                     u780:
  2458   007C92  2826               	incf	___fldiv@bexp^0,w,c
  2459   007C94  A4D8               	btfss	status,2,c
  2460   007C96  EF4F  F03E         	goto	u791
  2461   007C9A  EF51  F03E         	goto	u790
  2462   007C9E                     u791:
  2463   007C9E  EF59  F03E         	goto	l1404
  2464   007CA2                     u790:
  2465   007CA2  0E00               	movlw	0
  2466   007CA4  6E0F               	movwf	___fldiv@b^0,c
  2467   007CA6  0E00               	movlw	0
  2468   007CA8  6E10               	movwf	(___fldiv@b+1)^0,c
  2469   007CAA  0E00               	movlw	0
  2470   007CAC  6E11               	movwf	(___fldiv@b+2)^0,c
  2471   007CAE  0E00               	movlw	0
  2472   007CB0  6E12               	movwf	(___fldiv@b+3)^0,c
  2473   007CB2                     l1404:
  2474   007CB2  8E11               	bsf	(___fldiv@b+2)^0,7,c
  2475   007CB4  0E00               	movlw	0
  2476   007CB6  6E12               	movwf	(___fldiv@b+3)^0,c
  2477   007CB8  EF66  F03E         	goto	l1410
  2478   007CBC                     l1408:
  2479   007CBC  0E00               	movlw	0
  2480   007CBE  6E0F               	movwf	___fldiv@b^0,c
  2481   007CC0  0E00               	movlw	0
  2482   007CC2  6E10               	movwf	(___fldiv@b+1)^0,c
  2483   007CC4  0E00               	movlw	0
  2484   007CC6  6E11               	movwf	(___fldiv@b+2)^0,c
  2485   007CC8  0E00               	movlw	0
  2486   007CCA  6E12               	movwf	(___fldiv@b+3)^0,c
  2487   007CCC                     l1410:
  2488   007CCC  5016               	movf	(___fldiv@a+3)^0,w,c
  2489   007CCE  0B80               	andlw	128
  2490   007CD0  1A1F               	xorwf	___fldiv@sign^0,f,c
  2491   007CD2  5016               	movf	(___fldiv@a+3)^0,w,c
  2492   007CD4  2416               	addwf	(___fldiv@a+3)^0,w,c
  2493   007CD6  6E27               	movwf	___fldiv@aexp^0,c
  2494   007CD8  AE15               	btfss	(___fldiv@a+2)^0,7,c
  2495   007CDA  EF71  F03E         	goto	u801
  2496   007CDE  EF73  F03E         	goto	u800
  2497   007CE2                     u801:
  2498   007CE2  EF74  F03E         	goto	l1418
  2499   007CE6                     u800:
  2500   007CE6  8027               	bsf	___fldiv@aexp^0,0,c
  2501   007CE8                     l1418:
  2502   007CE8  5027               	movf	___fldiv@aexp^0,w,c
  2503   007CEA  B4D8               	btfsc	status,2,c
  2504   007CEC  EF7A  F03E         	goto	u811
  2505   007CF0  EF7C  F03E         	goto	u810
  2506   007CF4                     u811:
  2507   007CF4  EF91  F03E         	goto	l1428
  2508   007CF8                     u810:
  2509   007CF8  2827               	incf	___fldiv@aexp^0,w,c
  2510   007CFA  A4D8               	btfss	status,2,c
  2511   007CFC  EF82  F03E         	goto	u821
  2512   007D00  EF84  F03E         	goto	u820
  2513   007D04                     u821:
  2514   007D04  EF8C  F03E         	goto	l1424
  2515   007D08                     u820:
  2516   007D08  0E00               	movlw	0
  2517   007D0A  6E13               	movwf	___fldiv@a^0,c
  2518   007D0C  0E00               	movlw	0
  2519   007D0E  6E14               	movwf	(___fldiv@a+1)^0,c
  2520   007D10  0E00               	movlw	0
  2521   007D12  6E15               	movwf	(___fldiv@a+2)^0,c
  2522   007D14  0E00               	movlw	0
  2523   007D16  6E16               	movwf	(___fldiv@a+3)^0,c
  2524   007D18                     l1424:
  2525   007D18  8E15               	bsf	(___fldiv@a+2)^0,7,c
  2526   007D1A  0E00               	movlw	0
  2527   007D1C  6E16               	movwf	(___fldiv@a+3)^0,c
  2528   007D1E  EF99  F03E         	goto	l1430
  2529   007D22                     l1428:
  2530   007D22  0E00               	movlw	0
  2531   007D24  6E13               	movwf	___fldiv@a^0,c
  2532   007D26  0E00               	movlw	0
  2533   007D28  6E14               	movwf	(___fldiv@a+1)^0,c
  2534   007D2A  0E00               	movlw	0
  2535   007D2C  6E15               	movwf	(___fldiv@a+2)^0,c
  2536   007D2E  0E00               	movlw	0
  2537   007D30  6E16               	movwf	(___fldiv@a+3)^0,c
  2538   007D32                     l1430:
  2539   007D32  5013               	movf	___fldiv@a^0,w,c
  2540   007D34  1014               	iorwf	(___fldiv@a+1)^0,w,c
  2541   007D36  1015               	iorwf	(___fldiv@a+2)^0,w,c
  2542   007D38  1016               	iorwf	(___fldiv@a+3)^0,w,c
  2543   007D3A  A4D8               	btfss	status,2,c
  2544   007D3C  EFA2  F03E         	goto	u831
  2545   007D40  EFA4  F03E         	goto	u830
  2546   007D44                     u831:
  2547   007D44  EFBC  F03E         	goto	l1442
  2548   007D48                     u830:
  2549   007D48  0E00               	movlw	0
  2550   007D4A  6E0F               	movwf	___fldiv@b^0,c
  2551   007D4C  0E00               	movlw	0
  2552   007D4E  6E10               	movwf	(___fldiv@b+1)^0,c
  2553   007D50  0E00               	movlw	0
  2554   007D52  6E11               	movwf	(___fldiv@b+2)^0,c
  2555   007D54  0E00               	movlw	0
  2556   007D56  6E12               	movwf	(___fldiv@b+3)^0,c
  2557   007D58  0E80               	movlw	128
  2558   007D5A  1211               	iorwf	(___fldiv@b+2)^0,f,c
  2559   007D5C  0E7F               	movlw	127
  2560   007D5E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  2561   007D60                     l1436:
  2562   007D60  501F               	movf	___fldiv@sign^0,w,c
  2563   007D62  1212               	iorwf	(___fldiv@b+3)^0,f,c
  2564   007D64  C00F  F00F         	movff	___fldiv@b,?___fldiv
  2565   007D68  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  2566   007D6C  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  2567   007D70  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  2568   007D74  EFFF  F03F         	goto	l707
  2569   007D78                     l1442:
  2570   007D78  5026               	movf	___fldiv@bexp^0,w,c
  2571   007D7A  A4D8               	btfss	status,2,c
  2572   007D7C  EFC2  F03E         	goto	u841
  2573   007D80  EFC4  F03E         	goto	u840
  2574   007D84                     u841:
  2575   007D84  EFCE  F03E         	goto	l1450
  2576   007D88                     u840:
  2577   007D88  0E00               	movlw	0
  2578   007D8A  6E0F               	movwf	?___fldiv^0,c
  2579   007D8C  0E00               	movlw	0
  2580   007D8E  6E10               	movwf	(?___fldiv+1)^0,c
  2581   007D90  0E00               	movlw	0
  2582   007D92  6E11               	movwf	(?___fldiv+2)^0,c
  2583   007D94  0E00               	movlw	0
  2584   007D96  6E12               	movwf	(?___fldiv+3)^0,c
  2585   007D98  EFFF  F03F         	goto	l707
  2586   007D9C                     l1450:
  2587   007D9C  5027               	movf	___fldiv@aexp^0,w,c
  2588   007D9E  C026  F017         	movff	___fldiv@bexp,??___fldiv
  2589   007DA2  6A18               	clrf	(??___fldiv+1)^0,c
  2590   007DA4  5E17               	subwf	??___fldiv^0,f,c
  2591   007DA6  0E00               	movlw	0
  2592   007DA8  5A18               	subwfb	(??___fldiv+1)^0,f,c
  2593   007DAA  0E7F               	movlw	127
  2594   007DAC  2417               	addwf	??___fldiv^0,w,c
  2595   007DAE  6E20               	movwf	___fldiv@new_exp^0,c
  2596   007DB0  0E00               	movlw	0
  2597   007DB2  2018               	addwfc	(??___fldiv+1)^0,w,c
  2598   007DB4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  2599   007DB6  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  2600   007DBA  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  2601   007DBE  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  2602   007DC2  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  2603   007DC6  0E00               	movlw	0
  2604   007DC8  6E0F               	movwf	___fldiv@b^0,c
  2605   007DCA  0E00               	movlw	0
  2606   007DCC  6E10               	movwf	(___fldiv@b+1)^0,c
  2607   007DCE  0E00               	movlw	0
  2608   007DD0  6E11               	movwf	(___fldiv@b+2)^0,c
  2609   007DD2  0E00               	movlw	0
  2610   007DD4  6E12               	movwf	(___fldiv@b+3)^0,c
  2611   007DD6  0E00               	movlw	0
  2612   007DD8  6E22               	movwf	___fldiv@grs^0,c
  2613   007DDA  0E00               	movlw	0
  2614   007DDC  6E23               	movwf	(___fldiv@grs+1)^0,c
  2615   007DDE  0E00               	movlw	0
  2616   007DE0  6E24               	movwf	(___fldiv@grs+2)^0,c
  2617   007DE2  0E00               	movlw	0
  2618   007DE4  6E25               	movwf	(___fldiv@grs+3)^0,c
  2619   007DE6  0E00               	movlw	0
  2620   007DE8  6E27               	movwf	___fldiv@aexp^0,c
  2621   007DEA  EF2F  F03F         	goto	l709
  2622   007DEE                     l1460:
  2623   007DEE  5027               	movf	___fldiv@aexp^0,w,c
  2624   007DF0  B4D8               	btfsc	status,2,c
  2625   007DF2  EFFD  F03E         	goto	u851
  2626   007DF6  EFFF  F03E         	goto	u850
  2627   007DFA                     u851:
  2628   007DFA  EF16  F03F         	goto	l1468
  2629   007DFE                     u850:
  2630   007DFE  90D8               	bcf	status,0,c
  2631   007E00  361B               	rlcf	___fldiv@rem^0,f,c
  2632   007E02  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  2633   007E04  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  2634   007E06  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  2635   007E08  90D8               	bcf	status,0,c
  2636   007E0A  360F               	rlcf	___fldiv@b^0,f,c
  2637   007E0C  3610               	rlcf	(___fldiv@b+1)^0,f,c
  2638   007E0E  3611               	rlcf	(___fldiv@b+2)^0,f,c
  2639   007E10  3612               	rlcf	(___fldiv@b+3)^0,f,c
  2640   007E12  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  2641   007E14  EF0E  F03F         	goto	u861
  2642   007E18  EF10  F03F         	goto	u860
  2643   007E1C                     u861:
  2644   007E1C  EF11  F03F         	goto	l712
  2645   007E20                     u860:
  2646   007E20  800F               	bsf	___fldiv@b^0,0,c
  2647   007E22                     l712:
  2648   007E22  90D8               	bcf	status,0,c
  2649   007E24  3622               	rlcf	___fldiv@grs^0,f,c
  2650   007E26  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  2651   007E28  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  2652   007E2A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  2653   007E2C                     l1468:
  2654   007E2C  5013               	movf	___fldiv@a^0,w,c
  2655   007E2E  5C1B               	subwf	___fldiv@rem^0,w,c
  2656   007E30  5014               	movf	(___fldiv@a+1)^0,w,c
  2657   007E32  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  2658   007E34  5015               	movf	(___fldiv@a+2)^0,w,c
  2659   007E36  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  2660   007E38  5016               	movf	(___fldiv@a+3)^0,w,c
  2661   007E3A  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  2662   007E3C  A0D8               	btfss	status,0,c
  2663   007E3E  EF23  F03F         	goto	u871
  2664   007E42  EF25  F03F         	goto	u870
  2665   007E46                     u871:
  2666   007E46  EF2E  F03F         	goto	l1474
  2667   007E4A                     u870:
  2668   007E4A  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  2669   007E4C  5013               	movf	___fldiv@a^0,w,c
  2670   007E4E  5E1B               	subwf	___fldiv@rem^0,f,c
  2671   007E50  5014               	movf	(___fldiv@a+1)^0,w,c
  2672   007E52  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  2673   007E54  5015               	movf	(___fldiv@a+2)^0,w,c
  2674   007E56  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  2675   007E58  5016               	movf	(___fldiv@a+3)^0,w,c
  2676   007E5A  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  2677   007E5C                     l1474:
  2678   007E5C  2A27               	incf	___fldiv@aexp^0,f,c
  2679   007E5E                     l709:
  2680   007E5E  0E19               	movlw	25
  2681   007E60  6427               	cpfsgt	___fldiv@aexp^0,c
  2682   007E62  EF35  F03F         	goto	u881
  2683   007E66  EF37  F03F         	goto	u880
  2684   007E6A                     u881:
  2685   007E6A  EFF7  F03E         	goto	l1460
  2686   007E6E                     u880:
  2687   007E6E  501B               	movf	___fldiv@rem^0,w,c
  2688   007E70  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  2689   007E72  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  2690   007E74  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  2691   007E76  B4D8               	btfsc	status,2,c
  2692   007E78  EF40  F03F         	goto	u891
  2693   007E7C  EF42  F03F         	goto	u890
  2694   007E80                     u891:
  2695   007E80  EF5A  F03F         	goto	l1486
  2696   007E84                     u890:
  2697   007E84  8022               	bsf	___fldiv@grs^0,0,c
  2698   007E86  EF5A  F03F         	goto	l1486
  2699   007E8A                     l1480:
  2700   007E8A  90D8               	bcf	status,0,c
  2701   007E8C  360F               	rlcf	___fldiv@b^0,f,c
  2702   007E8E  3610               	rlcf	(___fldiv@b+1)^0,f,c
  2703   007E90  3611               	rlcf	(___fldiv@b+2)^0,f,c
  2704   007E92  3612               	rlcf	(___fldiv@b+3)^0,f,c
  2705   007E94  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  2706   007E96  EF4F  F03F         	goto	u901
  2707   007E9A  EF51  F03F         	goto	u900
  2708   007E9E                     u901:
  2709   007E9E  EF52  F03F         	goto	l718
  2710   007EA2                     u900:
  2711   007EA2  800F               	bsf	___fldiv@b^0,0,c
  2712   007EA4                     l718:
  2713   007EA4  90D8               	bcf	status,0,c
  2714   007EA6  3622               	rlcf	___fldiv@grs^0,f,c
  2715   007EA8  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  2716   007EAA  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  2717   007EAC  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  2718   007EAE  0620               	decf	___fldiv@new_exp^0,f,c
  2719   007EB0  A0D8               	btfss	status,0,c
  2720   007EB2  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  2721   007EB4                     l1486:
  2722   007EB4  AE11               	btfss	(___fldiv@b+2)^0,7,c
  2723   007EB6  EF5F  F03F         	goto	u911
  2724   007EBA  EF61  F03F         	goto	u910
  2725   007EBE                     u911:
  2726   007EBE  EF45  F03F         	goto	l1480
  2727   007EC2                     u910:
  2728   007EC2  0E00               	movlw	0
  2729   007EC4  6E27               	movwf	___fldiv@aexp^0,c
  2730   007EC6  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  2731   007EC8  EF68  F03F         	goto	u921
  2732   007ECC  EF6A  F03F         	goto	u920
  2733   007ED0                     u921:
  2734   007ED0  EF8E  F03F         	goto	l720
  2735   007ED4                     u920:
  2736   007ED4  0EFF               	movlw	255
  2737   007ED6  1422               	andwf	___fldiv@grs^0,w,c
  2738   007ED8  6E17               	movwf	??___fldiv^0,c
  2739   007EDA  0EFF               	movlw	255
  2740   007EDC  1423               	andwf	(___fldiv@grs+1)^0,w,c
  2741   007EDE  6E18               	movwf	(??___fldiv+1)^0,c
  2742   007EE0  0EFF               	movlw	255
  2743   007EE2  1424               	andwf	(___fldiv@grs+2)^0,w,c
  2744   007EE4  6E19               	movwf	(??___fldiv+2)^0,c
  2745   007EE6  0E7F               	movlw	127
  2746   007EE8  1425               	andwf	(___fldiv@grs+3)^0,w,c
  2747   007EEA  6E1A               	movwf	(??___fldiv+3)^0,c
  2748   007EEC  5017               	movf	??___fldiv^0,w,c
  2749   007EEE  1018               	iorwf	(??___fldiv+1)^0,w,c
  2750   007EF0  1019               	iorwf	(??___fldiv+2)^0,w,c
  2751   007EF2  101A               	iorwf	(??___fldiv+3)^0,w,c
  2752   007EF4  B4D8               	btfsc	status,2,c
  2753   007EF6  EF7F  F03F         	goto	u931
  2754   007EFA  EF81  F03F         	goto	u930
  2755   007EFE                     u931:
  2756   007EFE  EF85  F03F         	goto	l721
  2757   007F02                     u930:
  2758   007F02                     l1494:
  2759   007F02  0E01               	movlw	1
  2760   007F04  6E27               	movwf	___fldiv@aexp^0,c
  2761   007F06  EF8E  F03F         	goto	l720
  2762   007F0A                     l721:
  2763   007F0A  A00F               	btfss	___fldiv@b^0,0,c
  2764   007F0C  EF8A  F03F         	goto	u941
  2765   007F10  EF8C  F03F         	goto	u940
  2766   007F14                     u941:
  2767   007F14  EF8E  F03F         	goto	l720
  2768   007F18                     u940:
  2769   007F18  EF81  F03F         	goto	l1494
  2770   007F1C                     l720:
  2771   007F1C  5027               	movf	___fldiv@aexp^0,w,c
  2772   007F1E  B4D8               	btfsc	status,2,c
  2773   007F20  EF94  F03F         	goto	u951
  2774   007F24  EF96  F03F         	goto	u950
  2775   007F28                     u951:
  2776   007F28  EFBA  F03F         	goto	l1506
  2777   007F2C                     u950:
  2778   007F2C  0E01               	movlw	1
  2779   007F2E  260F               	addwf	___fldiv@b^0,f,c
  2780   007F30  0E00               	movlw	0
  2781   007F32  2210               	addwfc	(___fldiv@b+1)^0,f,c
  2782   007F34  2211               	addwfc	(___fldiv@b+2)^0,f,c
  2783   007F36  2212               	addwfc	(___fldiv@b+3)^0,f,c
  2784   007F38  A012               	btfss	(___fldiv@b+3)^0,0,c
  2785   007F3A  EFA1  F03F         	goto	u961
  2786   007F3E  EFA3  F03F         	goto	u960
  2787   007F42                     u961:
  2788   007F42  EFBA  F03F         	goto	l1506
  2789   007F46                     u960:
  2790   007F46  C00F  F017         	movff	___fldiv@b,??___fldiv
  2791   007F4A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  2792   007F4E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  2793   007F52  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  2794   007F56  341A               	rlcf	(??___fldiv+3)^0,w,c
  2795   007F58  321A               	rrcf	(??___fldiv+3)^0,f,c
  2796   007F5A  3219               	rrcf	(??___fldiv+2)^0,f,c
  2797   007F5C  3218               	rrcf	(??___fldiv+1)^0,f,c
  2798   007F5E  3217               	rrcf	??___fldiv^0,f,c
  2799   007F60  C017  F00F         	movff	??___fldiv,___fldiv@b
  2800   007F64  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  2801   007F68  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  2802   007F6C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  2803   007F70  4A20               	infsnz	___fldiv@new_exp^0,f,c
  2804   007F72  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  2805   007F74                     l1506:
  2806   007F74  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  2807   007F76  EFC5  F03F         	goto	u971
  2808   007F7A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  2809   007F7C  E108               	bnz	u970
  2810   007F7E  2820               	incf	___fldiv@new_exp^0,w,c
  2811   007F80  A0D8               	btfss	status,0,c
  2812   007F82  EFC5  F03F         	goto	u971
  2813   007F86  EFC7  F03F         	goto	u970
  2814   007F8A                     u971:
  2815   007F8A  EFD2  F03F         	goto	l1510
  2816   007F8E                     u970:
  2817   007F8E  0E00               	movlw	0
  2818   007F90  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  2819   007F92  6820               	setf	___fldiv@new_exp^0,c
  2820   007F94  0E00               	movlw	0
  2821   007F96  6E0F               	movwf	___fldiv@b^0,c
  2822   007F98  0E00               	movlw	0
  2823   007F9A  6E10               	movwf	(___fldiv@b+1)^0,c
  2824   007F9C  0E00               	movlw	0
  2825   007F9E  6E11               	movwf	(___fldiv@b+2)^0,c
  2826   007FA0  0E00               	movlw	0
  2827   007FA2  6E12               	movwf	(___fldiv@b+3)^0,c
  2828   007FA4                     l1510:
  2829   007FA4  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  2830   007FA6  EFDF  F03F         	goto	u980
  2831   007FAA  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  2832   007FAC  E106               	bnz	u981
  2833   007FAE  0420               	decf	___fldiv@new_exp^0,w,c
  2834   007FB0  B0D8               	btfsc	status,0,c
  2835   007FB2  EFDD  F03F         	goto	u981
  2836   007FB6  EFDF  F03F         	goto	u980
  2837   007FBA                     u981:
  2838   007FBA  EFED  F03F         	goto	l1514
  2839   007FBE                     u980:
  2840   007FBE  0E00               	movlw	0
  2841   007FC0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  2842   007FC2  0E00               	movlw	0
  2843   007FC4  6E20               	movwf	___fldiv@new_exp^0,c
  2844   007FC6  0E00               	movlw	0
  2845   007FC8  6E0F               	movwf	___fldiv@b^0,c
  2846   007FCA  0E00               	movlw	0
  2847   007FCC  6E10               	movwf	(___fldiv@b+1)^0,c
  2848   007FCE  0E00               	movlw	0
  2849   007FD0  6E11               	movwf	(___fldiv@b+2)^0,c
  2850   007FD2  0E00               	movlw	0
  2851   007FD4  6E12               	movwf	(___fldiv@b+3)^0,c
  2852   007FD6  0E00               	movlw	0
  2853   007FD8  6E1F               	movwf	___fldiv@sign^0,c
  2854   007FDA                     l1514:
  2855   007FDA  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  2856   007FDE  A026               	btfss	___fldiv@bexp^0,0,c
  2857   007FE0  EFF4  F03F         	goto	u991
  2858   007FE4  EFF6  F03F         	goto	u990
  2859   007FE8                     u991:
  2860   007FE8  EFF9  F03F         	goto	l1520
  2861   007FEC                     u990:
  2862   007FEC  8E11               	bsf	(___fldiv@b+2)^0,7,c
  2863   007FEE  EFFA  F03F         	goto	l1522
  2864   007FF2                     l1520:
  2865   007FF2  9E11               	bcf	(___fldiv@b+2)^0,7,c
  2866   007FF4                     l1522:
  2867   007FF4  90D8               	bcf	status,0,c
  2868   007FF6  3026               	rrcf	___fldiv@bexp^0,w,c
  2869   007FF8  6E12               	movwf	(___fldiv@b+3)^0,c
  2870   007FFA  EFB0  F03E         	goto	l1436
  2871   007FFE                     l707:
  2872   007FFE  0012               	return		;funcret
  2873   008000                     __end_of___fldiv:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _init *****************
  2877 ;; Defined at:
  2878 ;;		line 65 in file "main.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2894 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2895 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2896 ;;Total ram usage:        2 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text12
  2906   007106                     __ptext12:
  2907                           	callstack 0
  2908   007106                     _init:
  2909                           	callstack 30
  2910   007106                     
  2911                           ;main.c: 67:     TRISCbits.TRISC0 = 1;
  2912   007106  8094               	bsf	148,0,c	;volatile
  2913                           
  2914                           ;main.c: 68:     TRISCbits.TRISC1 = 1;
  2915   007108  8294               	bsf	148,1,c	;volatile
  2916                           
  2917                           ;main.c: 69:     TRISDbits.TRISD0 = 0;
  2918   00710A  9095               	bcf	149,0,c	;volatile
  2919                           
  2920                           ;main.c: 70:     TRISDbits.TRISD1 = 0;
  2921   00710C  9295               	bcf	149,1,c	;volatile
  2922                           
  2923                           ;main.c: 71:     TRISDbits.TRISD2 = 0;
  2924   00710E  9495               	bcf	149,2,c	;volatile
  2925                           
  2926                           ;main.c: 72:     TRISDbits.TRISD3 = 0;
  2927   007110  9695               	bcf	149,3,c	;volatile
  2928                           
  2929                           ;main.c: 73:     TRISDbits.TRISD4 = 1;
  2930   007112  8895               	bsf	149,4,c	;volatile
  2931                           
  2932                           ;main.c: 74:     TRISDbits.TRISD5 = 1;
  2933   007114  8A95               	bsf	149,5,c	;volatile
  2934                           
  2935                           ;main.c: 75:     TRISAbits.TRISA0 = 0;
  2936   007116  9092               	bcf	146,0,c	;volatile
  2937                           
  2938                           ;main.c: 76:     TRISAbits.TRISA1 = 0;
  2939   007118  9292               	bcf	146,1,c	;volatile
  2940                           
  2941                           ;main.c: 77:     TRISAbits.TRISA2 = 0;
  2942   00711A  9492               	bcf	146,2,c	;volatile
  2943                           
  2944                           ;main.c: 78:     TRISAbits.TRISA3 = 0;
  2945   00711C  9692               	bcf	146,3,c	;volatile
  2946                           
  2947                           ;main.c: 79:     TRISAbits.TRISA4 = 0;
  2948   00711E  9892               	bcf	146,4,c	;volatile
  2949                           
  2950                           ;main.c: 80:     TRISAbits.TRISA5 = 0;
  2951   007120  9A92               	bcf	146,5,c	;volatile
  2952                           
  2953                           ;main.c: 81:     TRISBbits.TRISB0 = 0;
  2954   007122  9093               	bcf	147,0,c	;volatile
  2955                           
  2956                           ;main.c: 82:     TRISBbits.TRISB1 = 0;
  2957   007124  9293               	bcf	147,1,c	;volatile
  2958                           
  2959                           ;main.c: 83:     TRISBbits.TRISB2 = 0;
  2960   007126  9493               	bcf	147,2,c	;volatile
  2961                           
  2962                           ;main.c: 84:     TRISBbits.TRISB3 = 0;
  2963   007128  9693               	bcf	147,3,c	;volatile
  2964                           
  2965                           ;main.c: 85:     TRISBbits.TRISB4 = 0;
  2966   00712A  9893               	bcf	147,4,c	;volatile
  2967                           
  2968                           ;main.c: 86:     TRISBbits.TRISB5 = 0;
  2969   00712C  9A93               	bcf	147,5,c	;volatile
  2970                           
  2971                           ;main.c: 87:     TRISBbits.TRISB6 = 0;
  2972   00712E  9C93               	bcf	147,6,c	;volatile
  2973                           
  2974                           ;main.c: 88:     TRISBbits.TRISB7 = 0;
  2975   007130  9E93               	bcf	147,7,c	;volatile
  2976                           
  2977                           ;main.c: 89:     TRISDbits.TRISD7 = 0;
  2978   007132  9E95               	bcf	149,7,c	;volatile
  2979                           
  2980                           ;main.c: 90:     TRISEbits.TRISE0 = 0;
  2981   007134  9096               	bcf	150,0,c	;volatile
  2982                           
  2983                           ;main.c: 91:     TRISEbits.TRISE1 = 0;
  2984   007136  9296               	bcf	150,1,c	;volatile
  2985                           
  2986                           ;main.c: 93:     PORTDbits.RD0 = 1;
  2987   007138  8083               	bsf	131,0,c	;volatile
  2988                           
  2989                           ;main.c: 94:     PORTDbits.RD1 = 0;
  2990   00713A  9283               	bcf	131,1,c	;volatile
  2991                           
  2992                           ;main.c: 96:     PORTDbits.RD7 = 1;
  2993   00713C  8E83               	bsf	131,7,c	;volatile
  2994   00713E                     
  2995                           ;main.c: 97:     _delay((unsigned long)((3000)*(16000000/4000.0)));
  2996   00713E  0E3D               	movlw	61
  2997   007140  6E02               	movwf	(??_init+1)^0,c
  2998   007142  0EE1               	movlw	225
  2999   007144  6E01               	movwf	??_init^0,c
  3000   007146  0E40               	movlw	64
  3001   007148                     u1817:
  3002   007148  2EE8               	decfsz	wreg,f,c
  3003   00714A  D7FE               	bra	u1817
  3004   00714C  2E01               	decfsz	??_init^0,f,c
  3005   00714E  D7FC               	bra	u1817
  3006   007150  2E02               	decfsz	(??_init+1)^0,f,c
  3007   007152  D7FA               	bra	u1817
  3008   007154                     
  3009                           ;main.c: 98:     PORTDbits.RD7 = 0;
  3010   007154  9E83               	bcf	131,7,c	;volatile
  3011   007156  0012               	return		;funcret
  3012   007158                     __end_of_init:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function _get_weight *****************
  3016 ;; Defined at:
  3017 ;;		line 132 in file "main.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    0[COMRAM] unsigned int 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3031 ;;      Params:         2       0       0       0       0       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3034 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3035 ;;Total ram usage:        2 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text13
  3045   007030                     __ptext13:
  3046                           	callstack 0
  3047   007030                     _get_weight:
  3048                           	callstack 30
  3049   007030                     
  3050                           ;main.c: 133:     if(PORTDbits.RD5 == 0)
  3051   007030  BA83               	btfsc	131,5,c	;volatile
  3052   007032  EF1D  F038         	goto	u1421
  3053   007036  EF1F  F038         	goto	u1420
  3054   00703A                     u1421:
  3055   00703A  EF25  F038         	goto	l50
  3056   00703E                     u1420:
  3057   00703E                     
  3058                           ;main.c: 134:         return 1;
  3059   00703E  0E00               	movlw	0
  3060   007040  6E02               	movwf	(?_get_weight+1)^0,c
  3061   007042  0E01               	movlw	1
  3062   007044  6E01               	movwf	?_get_weight^0,c
  3063   007046  EF36  F038         	goto	l51
  3064   00704A                     l50:
  3065   00704A  AA83               	btfss	131,5,c	;volatile
  3066   00704C  EF2A  F038         	goto	u1431
  3067   007050  EF2C  F038         	goto	u1430
  3068   007054                     u1431:
  3069   007054  EF32  F038         	goto	l1942
  3070   007058                     u1430:
  3071   007058                     
  3072                           ;main.c: 136:         return 2;
  3073   007058  0E00               	movlw	0
  3074   00705A  6E02               	movwf	(?_get_weight+1)^0,c
  3075   00705C  0E02               	movlw	2
  3076   00705E  6E01               	movwf	?_get_weight^0,c
  3077   007060  EF36  F038         	goto	l51
  3078   007064                     l1942:
  3079                           
  3080                           ;main.c: 137:     return 0;
  3081   007064  0E00               	movlw	0
  3082   007066  6E02               	movwf	(?_get_weight+1)^0,c
  3083   007068  0E00               	movlw	0
  3084   00706A  6E01               	movwf	?_get_weight^0,c
  3085   00706C                     l51:
  3086   00706C  0012               	return		;funcret
  3087   00706E                     __end_of_get_weight:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _get_color *****************
  3091 ;; Defined at:
  3092 ;;		line 113 in file "main.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  blue_val        2   12[COMRAM] unsigned int 
  3097 ;;  red_val         2   10[COMRAM] unsigned int 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2    6[COMRAM] unsigned int 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3107 ;;      Params:         2       0       0       0       0       0       0       0       0
  3108 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3109 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3110 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3111 ;;Total ram usage:        8 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 1
  3114 ;; This function calls:
  3115 ;;		_measure_color
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text14
  3122   007316                     __ptext14:
  3123                           	callstack 0
  3124   007316                     _get_color:
  3125                           	callstack 29
  3126   007316                     
  3127                           ;main.c: 114:     unsigned int red_val, blue_val;;main.c: 115:     red_val = measure_col
      +                          or(0,0);
  3128   007316  0E00               	movlw	0
  3129   007318  6E02               	movwf	(measure_color@s2_val+1)^0,c
  3130   00731A  0E00               	movlw	0
  3131   00731C  6E01               	movwf	measure_color@s2_val^0,c
  3132   00731E  0E00               	movlw	0
  3133   007320  6E04               	movwf	(measure_color@s3_val+1)^0,c
  3134   007322  0E00               	movlw	0
  3135   007324  6E03               	movwf	measure_color@s3_val^0,c
  3136   007326  EC5C  F038         	call	_measure_color	;wreg free
  3137   00732A  C001  F00B         	movff	?_measure_color,get_color@red_val
  3138   00732E  C002  F00C         	movff	?_measure_color+1,get_color@red_val+1
  3139   007332                     
  3140                           ;main.c: 116:     _delay((unsigned long)((500)*(16000000/4000.0)));
  3141   007332  0E0B               	movlw	11
  3142   007334  6E0A               	movwf	(??_get_color+1)^0,c
  3143   007336  0E26               	movlw	38
  3144   007338  6E09               	movwf	??_get_color^0,c
  3145   00733A  0E5E               	movlw	94
  3146   00733C                     u1827:
  3147   00733C  2EE8               	decfsz	wreg,f,c
  3148   00733E  D7FE               	bra	u1827
  3149   007340  2E09               	decfsz	??_get_color^0,f,c
  3150   007342  D7FC               	bra	u1827
  3151   007344  2E0A               	decfsz	(??_get_color+1)^0,f,c
  3152   007346  D7FA               	bra	u1827
  3153   007348                     
  3154                           ;main.c: 117:     blue_val = measure_color(0,1);
  3155   007348  0E00               	movlw	0
  3156   00734A  6E02               	movwf	(measure_color@s2_val+1)^0,c
  3157   00734C  0E00               	movlw	0
  3158   00734E  6E01               	movwf	measure_color@s2_val^0,c
  3159   007350  0E00               	movlw	0
  3160   007352  6E04               	movwf	(measure_color@s3_val+1)^0,c
  3161   007354  0E01               	movlw	1
  3162   007356  6E03               	movwf	measure_color@s3_val^0,c
  3163   007358  EC5C  F038         	call	_measure_color	;wreg free
  3164   00735C  C001  F00D         	movff	?_measure_color,get_color@blue_val
  3165   007360  C002  F00E         	movff	?_measure_color+1,get_color@blue_val+1
  3166   007364                     
  3167                           ;main.c: 118:     if(red_val > blue_val){
  3168   007364  500B               	movf	get_color@red_val^0,w,c
  3169   007366  5C0D               	subwf	get_color@blue_val^0,w,c
  3170   007368  500C               	movf	(get_color@red_val+1)^0,w,c
  3171   00736A  580E               	subwfb	(get_color@blue_val+1)^0,w,c
  3172   00736C  B0D8               	btfsc	status,0,c
  3173   00736E  EFBB  F039         	goto	u1401
  3174   007372  EFBD  F039         	goto	u1400
  3175   007376                     u1401:
  3176   007376  EFD1  F039         	goto	l1914
  3177   00737A                     u1400:
  3178   00737A                     
  3179                           ;main.c: 119:         PORTEbits.RE0 = 1;
  3180   00737A  8084               	bsf	132,0,c	;volatile
  3181   00737C                     
  3182                           ;main.c: 120:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  3183   00737C  0E29               	movlw	41
  3184   00737E  6E0A               	movwf	(??_get_color+1)^0,c
  3185   007380  0E96               	movlw	150
  3186   007382  6E09               	movwf	??_get_color^0,c
  3187   007384  0E7F               	movlw	127
  3188   007386                     u1837:
  3189   007386  2EE8               	decfsz	wreg,f,c
  3190   007388  D7FE               	bra	u1837
  3191   00738A  2E09               	decfsz	??_get_color^0,f,c
  3192   00738C  D7FC               	bra	u1837
  3193   00738E  2E0A               	decfsz	(??_get_color+1)^0,f,c
  3194   007390  D7FA               	bra	u1837
  3195   007392  F000               	nop	
  3196   007394                     
  3197                           ;main.c: 121:         PORTEbits.RE0 = 0;
  3198   007394  9084               	bcf	132,0,c	;volatile
  3199   007396                     
  3200                           ;main.c: 122:         return 1;
  3201   007396  0E00               	movlw	0
  3202   007398  6E08               	movwf	(?_get_color+1)^0,c
  3203   00739A  0E01               	movlw	1
  3204   00739C  6E07               	movwf	?_get_color^0,c
  3205   00739E  EFF4  F039         	goto	l45
  3206   0073A2                     l1914:
  3207   0073A2  500D               	movf	get_color@blue_val^0,w,c
  3208   0073A4  5C0B               	subwf	get_color@red_val^0,w,c
  3209   0073A6  500E               	movf	(get_color@blue_val+1)^0,w,c
  3210   0073A8  580C               	subwfb	(get_color@red_val+1)^0,w,c
  3211   0073AA  B0D8               	btfsc	status,0,c
  3212   0073AC  EFDA  F039         	goto	u1411
  3213   0073B0  EFDC  F039         	goto	u1410
  3214   0073B4                     u1411:
  3215   0073B4  EFF0  F039         	goto	l1926
  3216   0073B8                     u1410:
  3217   0073B8                     
  3218                           ;main.c: 125:         PORTEbits.RE1 = 1;
  3219   0073B8  8284               	bsf	132,1,c	;volatile
  3220   0073BA                     
  3221                           ;main.c: 126:         _delay((unsigned long)((2000)*(16000000/4000.0)));
  3222   0073BA  0E29               	movlw	41
  3223   0073BC  6E0A               	movwf	(??_get_color+1)^0,c
  3224   0073BE  0E96               	movlw	150
  3225   0073C0  6E09               	movwf	??_get_color^0,c
  3226   0073C2  0E7F               	movlw	127
  3227   0073C4                     u1847:
  3228   0073C4  2EE8               	decfsz	wreg,f,c
  3229   0073C6  D7FE               	bra	u1847
  3230   0073C8  2E09               	decfsz	??_get_color^0,f,c
  3231   0073CA  D7FC               	bra	u1847
  3232   0073CC  2E0A               	decfsz	(??_get_color+1)^0,f,c
  3233   0073CE  D7FA               	bra	u1847
  3234   0073D0  F000               	nop	
  3235   0073D2                     
  3236                           ;main.c: 127:         PORTEbits.RE1 = 0;
  3237   0073D2  9284               	bcf	132,1,c	;volatile
  3238   0073D4                     
  3239                           ;main.c: 128:         return 2;
  3240   0073D4  0E00               	movlw	0
  3241   0073D6  6E08               	movwf	(?_get_color+1)^0,c
  3242   0073D8  0E02               	movlw	2
  3243   0073DA  6E07               	movwf	?_get_color^0,c
  3244   0073DC  EFF4  F039         	goto	l45
  3245   0073E0                     l1926:
  3246                           
  3247                           ;main.c: 130:     return 0;
  3248   0073E0  0E00               	movlw	0
  3249   0073E2  6E08               	movwf	(?_get_color+1)^0,c
  3250   0073E4  0E00               	movlw	0
  3251   0073E6  6E07               	movwf	?_get_color^0,c
  3252   0073E8                     l45:
  3253   0073E8  0012               	return		;funcret
  3254   0073EA                     __end_of_get_color:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _measure_color *****************
  3258 ;; Defined at:
  3259 ;;		line 105 in file "main.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  s2_val          2    0[COMRAM] unsigned int 
  3262 ;;  s3_val          2    2[COMRAM] unsigned int 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  2    0[COMRAM] unsigned int 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3274 ;;      Params:         4       0       0       0       0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3276 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3277 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3278 ;;Total ram usage:        6 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_get_color
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text15
  3288   0070B8                     __ptext15:
  3289                           	callstack 0
  3290   0070B8                     _measure_color:
  3291                           	callstack 29
  3292   0070B8                     
  3293                           ;main.c: 107:     PORTDbits.RD2 = (unsigned char)s2_val;
  3294   0070B8  B001               	btfsc	measure_color@s2_val^0,0,c
  3295   0070BA  D002               	bra	u1335
  3296   0070BC  9483               	bcf	131,2,c	;volatile
  3297   0070BE  D001               	bra	u1336
  3298   0070C0                     u1335:
  3299   0070C0  8483               	bsf	131,2,c	;volatile
  3300   0070C2                     u1336:
  3301                           
  3302                           ;main.c: 108:     PORTDbits.RD3 = (unsigned char)s3_val;
  3303   0070C2  B003               	btfsc	measure_color@s3_val^0,0,c
  3304   0070C4  D002               	bra	u1345
  3305   0070C6  9683               	bcf	131,3,c	;volatile
  3306   0070C8  D001               	bra	u1346
  3307   0070CA                     u1345:
  3308   0070CA  8683               	bsf	131,3,c	;volatile
  3309   0070CC                     u1346:
  3310   0070CC                     
  3311                           ;main.c: 109:     _delay((unsigned long)((500)*(16000000/4000.0)));
  3312   0070CC  0E0B               	movlw	11
  3313   0070CE  6E06               	movwf	(??_measure_color+1)^0,c
  3314   0070D0  0E26               	movlw	38
  3315   0070D2  6E05               	movwf	??_measure_color^0,c
  3316   0070D4  0E5E               	movlw	94
  3317   0070D6                     u1857:
  3318   0070D6  2EE8               	decfsz	wreg,f,c
  3319   0070D8  D7FE               	bra	u1857
  3320   0070DA  2E05               	decfsz	??_measure_color^0,f,c
  3321   0070DC  D7FC               	bra	u1857
  3322   0070DE  2E06               	decfsz	(??_measure_color+1)^0,f,c
  3323   0070E0  D7FA               	bra	u1857
  3324   0070E2                     
  3325                           ;main.c: 110:     col = PORTDbits.RD4;
  3326   0070E2  B883               	btfsc	131,4,c	;volatile
  3327   0070E4  EF76  F038         	goto	u1351
  3328   0070E8  EF7A  F038         	goto	u1350
  3329   0070EC                     u1351:
  3330   0070EC  6A05               	clrf	??_measure_color^0,c
  3331   0070EE  2A05               	incf	??_measure_color^0,f,c
  3332   0070F0  EF7B  F038         	goto	u1358
  3333   0070F4                     u1350:
  3334   0070F4  6A05               	clrf	??_measure_color^0,c
  3335   0070F6                     u1358:
  3336   0070F6  5005               	movf	??_measure_color^0,w,c
  3337   0070F8  6E49               	movwf	_col^0,c
  3338   0070FA  6A4A               	clrf	(_col+1)^0,c
  3339   0070FC                     
  3340                           ;main.c: 111:     return col;
  3341   0070FC  C049  F001         	movff	_col,?_measure_color
  3342   007100  C04A  F002         	movff	_col+1,?_measure_color+1
  3343   007104  0012               	return		;funcret
  3344   007106                     __end_of_measure_color:
  3345                           	callstack 0
  3346   000000                     
  3347                           	psect	rparam
  3348   000000                     
  3349                           	psect	idloc
  3350                           
  3351                           ;Config register IDLOC0 @ 0x200000
  3352                           ;	unspecified, using default values
  3353   200000                     	org	2097152
  3354   200000  FF                 	db	255
  3355                           
  3356                           ;Config register IDLOC1 @ 0x200001
  3357                           ;	unspecified, using default values
  3358   200001                     	org	2097153
  3359   200001  FF                 	db	255
  3360                           
  3361                           ;Config register IDLOC2 @ 0x200002
  3362                           ;	unspecified, using default values
  3363   200002                     	org	2097154
  3364   200002  FF                 	db	255
  3365                           
  3366                           ;Config register IDLOC3 @ 0x200003
  3367                           ;	unspecified, using default values
  3368   200003                     	org	2097155
  3369   200003  FF                 	db	255
  3370                           
  3371                           ;Config register IDLOC4 @ 0x200004
  3372                           ;	unspecified, using default values
  3373   200004                     	org	2097156
  3374   200004  FF                 	db	255
  3375                           
  3376                           ;Config register IDLOC5 @ 0x200005
  3377                           ;	unspecified, using default values
  3378   200005                     	org	2097157
  3379   200005  FF                 	db	255
  3380                           
  3381                           ;Config register IDLOC6 @ 0x200006
  3382                           ;	unspecified, using default values
  3383   200006                     	org	2097158
  3384   200006  FF                 	db	255
  3385                           
  3386                           ;Config register IDLOC7 @ 0x200007
  3387                           ;	unspecified, using default values
  3388   200007                     	org	2097159
  3389   200007  FF                 	db	255
  3390                           
  3391                           	psect	config
  3392                           
  3393                           ;Config register CONFIG1L @ 0x300000
  3394                           ;	unspecified, using default values
  3395                           ;	PLL Prescaler Selection bits
  3396                           ;	PLLDIV = 0x0, unprogrammed default
  3397                           ;	System Clock Postscaler Selection bits
  3398                           ;	CPUDIV = 0x0, unprogrammed default
  3399                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3400                           ;	USBDIV = 0x0, unprogrammed default
  3401   300000                     	org	3145728
  3402   300000  00                 	db	0
  3403                           
  3404                           ;Config register CONFIG1H @ 0x300001
  3405                           ;	unspecified, using default values
  3406                           ;	Oscillator Selection bits
  3407                           ;	FOSC = 0x5, unprogrammed default
  3408                           ;	Fail-Safe Clock Monitor Enable bit
  3409                           ;	FCMEN = 0x0, unprogrammed default
  3410                           ;	Internal/External Oscillator Switchover bit
  3411                           ;	IESO = 0x0, unprogrammed default
  3412   300001                     	org	3145729
  3413   300001  05                 	db	5
  3414                           
  3415                           ;Config register CONFIG2L @ 0x300002
  3416                           ;	unspecified, using default values
  3417                           ;	Power-up Timer Enable bit
  3418                           ;	PWRT = 0x1, unprogrammed default
  3419                           ;	Brown-out Reset Enable bits
  3420                           ;	BOR = 0x3, unprogrammed default
  3421                           ;	Brown-out Reset Voltage bits
  3422                           ;	BORV = 0x3, unprogrammed default
  3423                           ;	USB Voltage Regulator Enable bit
  3424                           ;	VREGEN = 0x0, unprogrammed default
  3425   300002                     	org	3145730
  3426   300002  1F                 	db	31
  3427                           
  3428                           ;Config register CONFIG2H @ 0x300003
  3429                           ;	unspecified, using default values
  3430                           ;	Watchdog Timer Enable bit
  3431                           ;	WDT = 0x1, unprogrammed default
  3432                           ;	Watchdog Timer Postscale Select bits
  3433                           ;	WDTPS = 0xF, unprogrammed default
  3434   300003                     	org	3145731
  3435   300003  1F                 	db	31
  3436                           
  3437                           ; Padding undefined space
  3438   300004                     	org	3145732
  3439   300004  FF                 	db	255
  3440                           
  3441                           ;Config register CONFIG3H @ 0x300005
  3442                           ;	unspecified, using default values
  3443                           ;	CCP2 MUX bit
  3444                           ;	CCP2MX = 0x1, unprogrammed default
  3445                           ;	PORTB A/D Enable bit
  3446                           ;	PBADEN = 0x1, unprogrammed default
  3447                           ;	Low-Power Timer 1 Oscillator Enable bit
  3448                           ;	LPT1OSC = 0x0, unprogrammed default
  3449                           ;	MCLR Pin Enable bit
  3450                           ;	MCLRE = 0x1, unprogrammed default
  3451   300005                     	org	3145733
  3452   300005  83                 	db	131
  3453                           
  3454                           ;Config register CONFIG4L @ 0x300006
  3455                           ;	unspecified, using default values
  3456                           ;	Stack Full/Underflow Reset Enable bit
  3457                           ;	STVREN = 0x1, unprogrammed default
  3458                           ;	Single-Supply ICSP Enable bit
  3459                           ;	LVP = 0x1, unprogrammed default
  3460                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3461                           ;	ICPRT = 0x0, unprogrammed default
  3462                           ;	Extended Instruction Set Enable bit
  3463                           ;	XINST = 0x0, unprogrammed default
  3464                           ;	Background Debugger Enable bit
  3465                           ;	DEBUG = 0x1, unprogrammed default
  3466   300006                     	org	3145734
  3467   300006  85                 	db	133
  3468                           
  3469                           ; Padding undefined space
  3470   300007                     	org	3145735
  3471   300007  FF                 	db	255
  3472                           
  3473                           ;Config register CONFIG5L @ 0x300008
  3474                           ;	unspecified, using default values
  3475                           ;	Code Protection bit
  3476                           ;	CP0 = 0x1, unprogrammed default
  3477                           ;	Code Protection bit
  3478                           ;	CP1 = 0x1, unprogrammed default
  3479                           ;	Code Protection bit
  3480                           ;	CP2 = 0x1, unprogrammed default
  3481                           ;	Code Protection bit
  3482                           ;	CP3 = 0x1, unprogrammed default
  3483   300008                     	org	3145736
  3484   300008  0F                 	db	15
  3485                           
  3486                           ;Config register CONFIG5H @ 0x300009
  3487                           ;	unspecified, using default values
  3488                           ;	Boot Block Code Protection bit
  3489                           ;	CPB = 0x1, unprogrammed default
  3490                           ;	Data EEPROM Code Protection bit
  3491                           ;	CPD = 0x1, unprogrammed default
  3492   300009                     	org	3145737
  3493   300009  C0                 	db	192
  3494                           
  3495                           ;Config register CONFIG6L @ 0x30000A
  3496                           ;	unspecified, using default values
  3497                           ;	Write Protection bit
  3498                           ;	WRT0 = 0x1, unprogrammed default
  3499                           ;	Write Protection bit
  3500                           ;	WRT1 = 0x1, unprogrammed default
  3501                           ;	Write Protection bit
  3502                           ;	WRT2 = 0x1, unprogrammed default
  3503                           ;	Write Protection bit
  3504                           ;	WRT3 = 0x1, unprogrammed default
  3505   30000A                     	org	3145738
  3506   30000A  0F                 	db	15
  3507                           
  3508                           ;Config register CONFIG6H @ 0x30000B
  3509                           ;	unspecified, using default values
  3510                           ;	Configuration Register Write Protection bit
  3511                           ;	WRTC = 0x1, unprogrammed default
  3512                           ;	Boot Block Write Protection bit
  3513                           ;	WRTB = 0x1, unprogrammed default
  3514                           ;	Data EEPROM Write Protection bit
  3515                           ;	WRTD = 0x1, unprogrammed default
  3516   30000B                     	org	3145739
  3517   30000B  E0                 	db	224
  3518                           
  3519                           ;Config register CONFIG7L @ 0x30000C
  3520                           ;	unspecified, using default values
  3521                           ;	Table Read Protection bit
  3522                           ;	EBTR0 = 0x1, unprogrammed default
  3523                           ;	Table Read Protection bit
  3524                           ;	EBTR1 = 0x1, unprogrammed default
  3525                           ;	Table Read Protection bit
  3526                           ;	EBTR2 = 0x1, unprogrammed default
  3527                           ;	Table Read Protection bit
  3528                           ;	EBTR3 = 0x1, unprogrammed default
  3529   30000C                     	org	3145740
  3530   30000C  0F                 	db	15
  3531                           
  3532                           ;Config register CONFIG7H @ 0x30000D
  3533                           ;	unspecified, using default values
  3534                           ;	Boot Block Table Read Protection bit
  3535                           ;	EBTRB = 0x1, unprogrammed default
  3536   30000D                     	org	3145741
  3537   30000D  40                 	db	64
  3538                           tosu	equ	0xFFF
  3539                           tosh	equ	0xFFE
  3540                           tosl	equ	0xFFD
  3541                           stkptr	equ	0xFFC
  3542                           pclatu	equ	0xFFB
  3543                           pclath	equ	0xFFA
  3544                           pcl	equ	0xFF9
  3545                           tblptru	equ	0xFF8
  3546                           tblptrh	equ	0xFF7
  3547                           tblptrl	equ	0xFF6
  3548                           tablat	equ	0xFF5
  3549                           prodh	equ	0xFF4
  3550                           prodl	equ	0xFF3
  3551                           indf0	equ	0xFEF
  3552                           postinc0	equ	0xFEE
  3553                           postdec0	equ	0xFED
  3554                           preinc0	equ	0xFEC
  3555                           plusw0	equ	0xFEB
  3556                           fsr0h	equ	0xFEA
  3557                           fsr0l	equ	0xFE9
  3558                           wreg	equ	0xFE8
  3559                           indf1	equ	0xFE7
  3560                           postinc1	equ	0xFE6
  3561                           postdec1	equ	0xFE5
  3562                           preinc1	equ	0xFE4
  3563                           plusw1	equ	0xFE3
  3564                           fsr1h	equ	0xFE2
  3565                           fsr1l	equ	0xFE1
  3566                           bsr	equ	0xFE0
  3567                           indf2	equ	0xFDF
  3568                           postinc2	equ	0xFDE
  3569                           postdec2	equ	0xFDD
  3570                           preinc2	equ	0xFDC
  3571                           plusw2	equ	0xFDB
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     72      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_take_action
    _take_action->_sort_heavy_obj
    _take_action->_sort_light_obj
    _sort_light_obj->_adjust_blue_flap
    _sort_light_obj->_adjust_red_flap
    _adjust_red_flap->___fltol
    _adjust_blue_flap->___fltol
    _sort_heavy_obj->_adjust_jaw
    _adjust_jaw->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _get_color->_measure_color

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14775
                                             68 COMRAM     4     4      0
                          _get_color
                         _get_weight
                               _init
                        _take_action
                    _toggle_conveyor
 ---------------------------------------------------------------------------------
 (1) _take_action                                          4     0      4   13183
                                             64 COMRAM     4     0      4
                     _sort_heavy_obj
                     _sort_light_obj
 ---------------------------------------------------------------------------------
 (2) _sort_light_obj                                       4     2      2    7970
                                             60 COMRAM     4     2      2
                   _adjust_blue_flap
                    _adjust_red_flap
                            _msDelay
                    _toggle_conveyor
 ---------------------------------------------------------------------------------
 (3) _adjust_red_flap                                     11     7      4    3173
                                             49 COMRAM    11     7      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _adjust_blue_flap                                    11     7      4    3173
                                             49 COMRAM    11     7      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _sort_heavy_obj                                       4     2      2    4797
                                             60 COMRAM     4     2      2
                         _adjust_jaw
                            _msDelay
                    _toggle_conveyor
 ---------------------------------------------------------------------------------
 (1) _toggle_conveyor                                      4     0      4    1108
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _msDelay                                              6     4      2     320
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _adjust_jaw                                          11     7      4    3173
                                             49 COMRAM    11     7      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     457
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1703
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_weight                                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_color                                            8     6      2     438
                                              6 COMRAM     8     6      2
                      _measure_color
 ---------------------------------------------------------------------------------
 (2) _measure_color                                        6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_color
     _measure_color
   _get_weight
   _init
   _take_action
     _sort_heavy_obj
       _adjust_jaw
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _msDelay
       _toggle_conveyor
     _sort_light_obj
       _adjust_blue_flap
         ___fldiv
         ___fltol
         ___xxtofl
       _adjust_red_flap
         ___fldiv
         ___fltol
         ___xxtofl
       _msDelay
       _toggle_conveyor
   _toggle_conveyor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          69      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     48      4A       1       77.9%
BITBIGSFRllll       20      0       0      23        0.0%
BITBIGSFRllh         D      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      18        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 09 13:01:34 2023

      adjust_blue_flap@i_574 0039                 ___fldiv@aexp 0027                 ___fldiv@bexp 0026  
               ___fldiv@sign 001F                           l32 70B6                           l41 7104  
                         l50 704A                           l51 706C                           l35 7156  
                         l45 73E8                           l38 702E                           l70 7812  
                         l62 7A9A                           l63 7A36                           l81 76EE  
                         l65 7AB0                           l57 79FE                           l82 768A  
                         l74 7912                           l58 799A                           l75 78AE  
                         l77 7928                           l69 7876                           l86 778A  
                         l87 7726                           l95 7618                           l89 77A0  
    __end_of_toggle_conveyor 7030                          l101 7252                          l111 7314  
                        l107 7314                          l117 7170                          l422 74EE  
                        l720 7F1C                          l712 7E22                          l721 7F0A  
                        l707 7FFE                          l709 7E5E                          l718 7EA4  
                        l780 7B08                          l783 7C64                          l794 7BFC  
                        l787 7BA0                          u800 7CE6                          u801 7CE2  
                        u810 7CF8                          u811 7CF4                          u900 7EA2  
                        u820 7D08                          u901 7E9E                          u821 7D04  
                        u910 7EC2                          u830 7D48                          u911 7EBE  
                        u831 7D44                          u920 7ED4                          u840 7D88  
                        u921 7ED0                          u841 7D84                          u930 7F02  
                        u850 7DFE                          u770 7C80                          u931 7EFE  
                        u851 7DFA                          u771 7C7C                          u940 7F18  
                        u860 7E20                          u780 7C92                          u941 7F14  
                        u861 7E1C                          u781 7C8E                          u950 7F2C  
                        u870 7E4A                          u790 7CA2                          u951 7F28  
                        u871 7E46                          u791 7C9E                          u960 7F46  
                        u880 7E6E                          u961 7F42                          u881 7E6A  
                        u970 7F8E                          u890 7E84                          u971 7F8A  
                        u891 7E80                          u980 7FBE                          u981 7FBA  
                        u990 7FEC                          u991 7FE8                          _col 0049  
                        wreg 0FE8                 ___fltol@exp1 0031                         l1300 7106  
                       l1302 713E                         l1304 7154                         l1400 7C92  
                       l1410 7CCC                         l1402 7CA2                         l1500 7F38  
                       l1420 7CF8                         l1412 7CD2                         l1404 7CB2  
                       l1510 7FA4                         l1502 7F46                         l1430 7D32  
                       l1422 7D08                         l1414 7CD8                         l1406 7CB4  
                       l1520 7FF2                         l1512 7FBE                         l1504 7F70  
                       l1432 7D48                         l1424 7D18                         l1416 7CE6  
                       l1408 7CBC                         l1600 7BDE                         l1522 7FF4  
                       l1514 7FDA                         l1506 7F74                         l1450 7D9C  
                       l1434 7D58                         l1442 7D78                         l1426 7D1A  
                       l1418 7CE8                         l1530 73EA                         l1610 7C34  
                       l1602 7BEC                         l1516 7FDE                         l1508 7F8E  
                       l1460 7DEE                         l1452 7DB6                         l1444 7D88  
                       l1436 7D60                         l1428 7D22                         l1540 7440  
                       l1532 7400                         l1612 7C44                         l1604 7C0A  
                       l1620 706E                         l1700 7A84                         l1518 7FEC  
                       l1470 7E4A                         l1462 7DFE                         l1454 7DC6  
                       l1446 7D88                         l1438 7D64                         l1542 7450  
                       l1614 7C52                         l1606 7C0C                         l1630 7086  
                       l1710 781A                         l1702 7A96                         l1480 7E8A  
                       l1472 7E4C                         l1464 7E12                         l1456 7DD6  
                       l1392 7C66                         l1552 747A                         l1544 7454  
                       l1536 7414                         l1616 7C54                         l1608 7C10  
                       l1800 76D8                         l1632 709C                         l1720 7842  
                       l1712 782A                         l1704 77A2                         l1640 797C  
                       l1490 7EC6                         l1482 7E94                         l1474 7E5C  
                       l1466 7E20                         l1458 7DE6                         l1394 7C72  
                       l1570 74DE                         l1562 74A2                         l1554 7484  
                       l1546 7462                         l1538 743E                         l1810 773E  
                       l1802 76EA                         l1634 70A0                         l1626 7076  
                       l1730 785C                         l1722 7844                         l1714 782C  
                       l1706 77F4                         l1650 79B6                         l1642 798E  
                       l1900 7364                         l1492 7ED4                         l1484 7EA2  
                       l1476 7E6E                         l1468 7E2C                         l1396 7C80  
                       l1564 74AE                         l1556 748E                         l1580 7B18  
                       l1820 7758                         l1812 7740                         l1804 7708  
                       l1628 7082                         l1636 701A                         l1740 78A2  
                       l1732 785E                         l1724 7846                         l1716 782E  
                       l1708 7806                         l1660 79D0                         l1652 79B8  
                       l1644 79A2                         l1902 737A                         l1494 7F02  
                       l1478 7E84                         l1486 7EB4                         l1398 7C82  
                       l1566 74BE                         l1590 7B56                         l1582 7B2E  
                       l1574 7AB4                         l1830 7772                         l1822 775A  
                       l1814 7742                         l1806 771A                         l1750 78CC  
                       l1742 78B6                         l1734 7860                         l1726 7848  
                       l1718 7830                         l1670 79FA                         l1662 79E2  
                       l1654 79CA                         l1646 79B2                         l1638 792A  
                       l1840 70E2                         l1920 73D2                         l1904 737C  
                       l1488 7EC2                         l1568 74CE                         l1592 7B88  
                       l1576 7AC4                         l1832 7774                         l1824 775C  
                       l1816 7744                         l1808 772E                         l1760 78F6  
                       l1752 78DE                         l1744 78C6                         l1736 7872  
                       l1728 785A                         l1680 7A50                         l1664 79E4  
                       l1656 79CC                         l1648 79B4                         l1672 7A18  
    adjust_blue_flap@degrees 0032                         l1842 70FC                         l1922 73D4  
                       l1906 7394                         l1914 73A2                         l1930 7030  
                       l1498 7F2C                         l1594 7B8A                         l1586 7B42  
                       l1578 7AD2                         l1834 7786                         l1826 776E  
                       l1818 7756                         l1770 761A                         l1762 78F8  
                       l1754 78E0                         l1746 78C8                         l1738 7890  
                       l1690 7A6A                         l1682 7A52                         l1674 7A2A  
                       l1666 79E6                         l1658 79CE                         l1850 7516  
                       l1836 70B8                         l1916 73B8                         l1908 7396  
                       l1932 703E                         l1596 7B96                         l1588 7B4A  
                       l1828 7770                         l1780 76A4                         l1772 766C  
                       l1764 78FA                         l1756 78E2                         l1748 78CA  
                       l1692 7A6C                         l1684 7A54                         l1676 7A3E  
                       l1668 79E8                         l1860 7574                         l1852 752C  
                       l1838 70CC                         l1918 73BA                         l1926 73E0  
                       l1942 7064                         l1598 7BD2                         l1790 76BE  
                       l1782 76A6                         l1774 767E                         l1766 78FC  
                       l1758 78E4                         l1694 7A7E                         l1686 7A66  
                       l1678 7A4E                         l1870 75E0                         l1854 7540  
                       l1862 758E                         l1846 74F0                         l1950 7278  
                       l1792 76C0                         l1784 76A8                         l1776 7692  
                       l1880 71DA                         l1768 790E                         l1696 7A80  
                       l1688 7A68                         l1872 75EC                         l1864 75A2  
                       l1856 754C                         l1848 7502                         l1960 72D2  
                       l1952 7288                         l1938 7058                         l1794 76D2  
                       l1786 76BA                         l1778 76A2                         l1890 723A  
                       l1882 71E6                         l1698 7A82                         l1874 7600  
                       l1866 75B6                         l1858 7560                         l1954 729A  
                       l1946 7254                         l1970 7158                         l1796 76D4  
                       l1788 76BC                         l1884 71F8                         l1868 75CC  
                       l1964 72E8                         l1956 72AE                         l1948 7266  
                       l1972 715C                         l1894 7316                         l1798 76D6  
                       l1886 720C                         l1878 71C6                         l1966 72FC  
                       l1958 72BE                         l1974 717E                         l1896 7332  
                       l1888 7226                         l1976 7192                         l1898 7348  
                       l1978 719E                         u1000 7400                         u1001 73FC  
                       u1010 7434                         u1020 7462                         u1100 7B84  
                       u1021 745E                         u1101 7B80                         u1030 7476  
                       u1110 7BCE                         u1031 7472                         u1015 742A  
                       u1111 7BCA                         u1040 749E                         u1120 7BEC  
                       u1041 749A                         u1121 7BE8                         u1050 74BE  
                       u1130 7BFC                         u1210 798E                         u1051 74BA  
                       u1131 7BF8                         u1211 798A                         u1060 74CE  
                       u1140 7C0A                         u1300 7704                         u1220 7A14  
                       u1061 74CA                         u1141 7C06                         u1301 7700  
                       u1205 702C                         u1221 7A10                         u1150 7C44  
                       u1070 7AC4                         u1310 771A                         u1206 702E  
                       u1230 7A2A                         u1151 7C40                         u1071 7AC0  
                       u1311 7716                         u1231 7A26                         u1400 737A  
                       u1160 7C52                         u1080 7AD2                         u1320 77A0  
                       u1240 7AB0                         u1401 7376                         u1161 7C4E  
                       u1081 7ACE                         u1321 779C                         u1241 7AAC  
                       u1410 73B8                         u1090 7B2E                         u1170 709C  
                       u1250 7806                         u1411 73B4                         u1091 7B2A  
                       u1171 7098                         u1251 7802                         u1420 703E  
                       u1180 70B6                         u1260 788C                         u1500 72FC  
                       u1421 703A                         u1181 70B2                         u1261 7888  
                       u1501 72F8                         u1350 70F4                         u1430 7058  
                       u1270 78A2                         u1510 7310                         u1351 70EC  
                       u1335 70C0                         u1431 7054                         u1271 789E  
                       u1511 730C                         u1336 70C2                         u1280 7928  
                       u1360 7502                         u1440 7266                         u1520 717E  
                       u1345 70CA                         u1281 7924                         u1361 74FE  
                       u1441 7262                         u1521 717A                         u1346 70CC  
                       u1290 767E                         u1370 75A2                         u1450 7278  
                       u1291 767A                         u1195 7022                         u1371 759E  
                       u1451 7274                         u1196 7024                         u1380 71F8  
                       u1460 729A                         u1381 71F4                         u1461 7296  
                       u1358 70F6                         u1390 723A                         u1470 72AE  
                       u1391 7236                         u1607 7A44                         u1471 72AA  
                       u1480 72D2                         u1617 7A5C                         u1537 7520  
                       u1481 72CE                         u1490 72E4                         u1707 78EC  
                       u1627 7A74                         u1547 757E                         u1491 72E0  
                       u1717 7904                         u1637 7A8C                         u1557 75C0  
                       u1807 777C                         u1727 7216                         u1647 7820  
                       u1567 79A8                         u1817 7148                         u1737 7698  
                       u1657 7838                         u1577 79C0                         u1827 733C  
                       u1747 76B0                         u1667 7850                         u1587 79D8  
                       u1837 7386                         u1757 76C8                         u1677 7868  
                       u1597 79F0                         u1847 73C4                         u1767 76E0  
                       u1687 78BC                         u1857 70D6                         u1777 7734  
                       u1697 78D4                         u1787 774C                         u1797 7764  
                       _main 7158                         _init 7106                         start 0000  
            ___fldiv@new_exp 0020                 ___param_bank 0000         adjust_red_flap@i_560 0039  
        toggle_conveyor@in_1 0001          toggle_conveyor@in_2 0003                ___fltol@sign1 0030  
                      ?_main 0001                        ?_init 0001              __end_of___fldiv 8000  
            __end_of___fltol 74F0              __end_of_msDelay 70B8                        status 0FD8  
            __initialization 7010                 __end_of_main 71C6                 __end_of_init 7158  
               ?_take_action 0041             ?_toggle_conveyor 0001                       ??_main 0045  
                     ??_init 0001                __activetblptr 0000             __end_of___xxtofl 7C66  
            _adjust_red_flap 792A                    ??___fldiv 0017                    ??___fltol 002C  
                     isa$std 0001                    ??_msDelay 0003                _measure_color 70B8  
               ___xxtofl@arg 000B                 ___xxtofl@exp 000A                 ___xxtofl@val 0001  
                 __accesstop 0060      __end_of__initialization 7014                ___rparam_used 0001  
                 ___fltol@f1 0028               __pcstackCOMRAM 0001   adjust_red_flap@no_of_steps 003B  
          get_color@blue_val 000D               ?_measure_color 0001      __end_of_adjust_red_flap 7AB2  
                 _adjust_jaw 761A               _sort_heavy_obj 71C6       adjust_red_flap@degrees 0032  
   adjust_red_flap@direction 0034               _sort_light_obj 74F0             _adjust_blue_flap 77A2  
                  ?___xxtofl 0001                   _get_weight 7030       __end_of_sort_heavy_obj 7254  
                    __Hparam 0000                      __Lparam 0000            __end_of_get_color 73EA  
     __end_of_sort_light_obj 761A                      ___fldiv 7C66                      ___fltol 73EA  
                    __pcinit 7010                      __ramtop 0800              ??_measure_color 0005  
                    __ptext0 7158                      __ptext1 7254                      __ptext2 74F0  
                    __ptext3 792A                      __ptext4 77A2                      __ptext5 71C6  
                    __ptext6 701A                      __ptext7 706E                      __ptext8 761A  
                    __ptext9 7AB2                      _msDelay 706E              adjust_jaw@i_580 0039  
                 ??___xxtofl 0005  adjust_blue_flap@no_of_steps 003B         end_of_initialization 7014  
           ?_adjust_red_flap 0032              ?_sort_heavy_obj 003D                  ?_adjust_jaw 0032  
            ?_sort_light_obj 003D                    _PORTAbits 0F80                    _PORTBbits 0F81  
                  _PORTCbits 0F82                    _PORTDbits 0F83                    _PORTEbits 0F84  
          sort_heavy_obj@col 003D                ___xxtofl@sign 0009                    _TRISAbits 0F92  
                  _TRISBbits 0F93                    _TRISCbits 0F94                    _TRISDbits 0F95  
                  _TRISEbits 0F96                  ?_get_weight 0001                  ___fldiv@grs 0022  
                ___fldiv@rem 001B          measure_color@s2_val 0001          measure_color@s3_val 0003  
                 main@weight 0047          start_initialization 7010     __end_of_adjust_blue_flap 792A  
                  ___fldiv@a 0013                    ___fldiv@b 000F                  __pbssCOMRAM 0049  
               take_action@c 0041                 take_action@w 0043             get_color@red_val 000B  
          ??_toggle_conveyor 0005                ??_take_action 0045                     ?___fldiv 000F  
                   ?___fltol 0028                    _get_color 7316                     ?_msDelay 0001  
           ??_sort_heavy_obj 003F                 ??_adjust_jaw 0036             ??_sort_light_obj 003F  
          adjust_jaw@degrees 0032                   ?_get_color 0007            adjust_blue_flap@i 0037  
        __end_of_take_action 7316        __end_of_measure_color 7106           __end_of_adjust_jaw 77A2  
                  main@color 0045                 ??_get_weight 0003    adjust_blue_flap@direction 0034  
                   __Hrparam 0000                     __Lrparam 0000           __end_of_get_weight 706E  
                   ___xxtofl 7AB2                     __ptext10 73EA                     __ptext11 7C66  
                   __ptext12 7106                     __ptext13 7030                     __ptext14 7316  
                   __ptext15 70B8                  adjust_jaw@i 0037            ?_adjust_blue_flap 0032  
          sort_light_obj@col 003D           ??_adjust_blue_flap 0036                     isa$xinst 0000  
                _take_action 7254                  ??_get_color 0009                     msDelay@i 0005  
                   msDelay@j 0003                     msDelay@t 0001        adjust_jaw@no_of_steps 003B  
            _toggle_conveyor 701A          adjust_jaw@direction 0034             adjust_red_flap@i 0037  
          ??_adjust_red_flap 0036  
